<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>(增强篇)  Bezier曲线拟合数据点的几何作图法</title>
    <url>/post/56c1b7a3.html</url>
    <content><![CDATA[<blockquote>
<p>在之前的一篇 <a href="https://www.ifish.ink/post/7741e06a.html">“Bezier曲线拟合数据点的几何作图法”</a>
博客基础上添加鼠标移动控制顶点交互的功能。</p>
</blockquote>
<h3 id="交互选择控制顶点并画出初始曲线">交互选择控制顶点，并画出初始曲线</h3>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab">clear
close all
grid on<span class="token punctuation">,</span>hold on
<span class="token comment">% axis equal</span>
global ctrl_points h1 h_bezier<span class="token punctuation">;</span>
<span class="token punctuation">[</span>ctrl_points<span class="token punctuation">,</span>h<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">cqj_selectPoints</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token operator">:</span><span class="token number">0.01</span><span class="token operator">:</span><span class="token number">1</span>
    <span class="token function">newData</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token function">int32</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">cqj_GetBezier3Point</span><span class="token punctuation">(</span>ctrl_points<span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
h_bezier <span class="token operator">=</span> <span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">newData</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">newData</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'-r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

h1 <span class="token operator">=</span> <span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">ctrl_points</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ctrl_points</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'r*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">set</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span><span class="token string">'visible'</span><span class="token punctuation">,</span><span class="token string">'off'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
text__ <span class="token operator">=</span> <span class="token function">cell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">size</span><span class="token punctuation">(</span>ctrl_points<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token function">size</span><span class="token punctuation">(</span>ctrl_points<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
    text__<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">num2str</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>

myText <span class="token operator">=</span> <span class="token function">text</span><span class="token punctuation">(</span><span class="token function">ctrl_points</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ctrl_points</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span>text__<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">set</span><span class="token punctuation">(</span>gcf<span class="token punctuation">,</span><span class="token string">'WindowButtonDownFcn'</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token operator">@</span>ButtonDownFcn<span class="token punctuation">,</span>h<span class="token punctuation">,</span>myText<span class="token punctuation">,</span>h_bezier<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">set</span><span class="token punctuation">(</span>gcf<span class="token punctuation">,</span><span class="token string">'WindowButtonUpFcn'</span><span class="token punctuation">,</span><span class="token operator">@</span>ButtonUpFcn<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<span id="more"></span>
<h3 id="bezier曲线几何作图法">Bezier曲线几何作图法</h3>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span> data <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">cqj_GetBezier3Point</span><span class="token punctuation">(</span>dataPoints<span class="token punctuation">,</span>u<span class="token punctuation">)</span>
<span class="token comment">% 得到曲线参数为u的数据点</span>
<span class="token comment">% dataPoints：初始点 2xn</span>
data <span class="token operator">=</span> dataPoints<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token number">1</span>
    <span class="token keyword">if</span> <span class="token function">size</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
    temp <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">size</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token function">size</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>
        <span class="token function">temp</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>u<span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">+</span>u<span class="token operator">*</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
    data <span class="token operator">=</span> temp<span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token keyword">end</span></code></pre>
<h3 id="处理鼠标响应事件">处理鼠标响应事件</h3>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token function">ButtonUpFcn</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">,</span><span class="token operator">~</span><span class="token punctuation">)</span>
<span class="token function">set</span><span class="token punctuation">(</span>gcf<span class="token punctuation">,</span> <span class="token string">'WindowButtonMotionFcn'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">%取消鼠标移动响应</span>
<span class="token keyword">end</span></code></pre>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token function">ButtonMotionFcn</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">,</span><span class="token operator">~</span><span class="token punctuation">,</span>ind<span class="token punctuation">,</span>h<span class="token punctuation">,</span>myText<span class="token punctuation">,</span>h_bezier<span class="token punctuation">)</span>
global ctrl_points h1<span class="token punctuation">;</span>
pt <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'CurrentPoint'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">%获取当前点坐标</span>
<span class="token function">ctrl_points</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>ind<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">pt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">pt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token operator">:</span><span class="token number">0.01</span><span class="token operator">:</span><span class="token number">1</span>
    <span class="token function">newData</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token function">int32</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">cqj_GetBezier3Point</span><span class="token punctuation">(</span>ctrl_points<span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token function">set</span><span class="token punctuation">(</span>h_bezier<span class="token punctuation">,</span><span class="token string">'XData'</span><span class="token punctuation">,</span><span class="token function">newData</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">set</span><span class="token punctuation">(</span>h_bezier<span class="token punctuation">,</span><span class="token string">'YData'</span><span class="token punctuation">,</span><span class="token function">newData</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">set</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span><span class="token string">'xdata'</span><span class="token punctuation">,</span><span class="token function">ctrl_points</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">set</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span><span class="token string">'ydata'</span><span class="token punctuation">,</span><span class="token function">ctrl_points</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">set</span><span class="token punctuation">(</span><span class="token function">myText</span><span class="token punctuation">(</span>ind<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'position'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">pt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">pt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">set</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span><span class="token string">'xdata'</span><span class="token punctuation">,</span><span class="token function">pt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">set</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span><span class="token string">'ydata'</span><span class="token punctuation">,</span><span class="token function">pt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">set</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span><span class="token string">'visible'</span><span class="token punctuation">,</span><span class="token string">'on'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
drawnow<span class="token punctuation">;</span>
<span class="token keyword">end</span></code></pre>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token function">ButtonDownFcn</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">,</span><span class="token operator">~</span><span class="token punctuation">,</span>h<span class="token punctuation">,</span>myText<span class="token punctuation">,</span>h_bezier<span class="token punctuation">)</span>
global ctrl_points h1<span class="token punctuation">;</span>
pt <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'CurrentPoint'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">%获取当前点坐标</span>
curpoint <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">pt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">pt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">% 当前点坐标</span>
curpoint_tr <span class="token operator">=</span> curpoint<span class="token operator">*</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">size</span><span class="token punctuation">(</span>ctrl_points<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%当前点坐标矩阵 每列一样</span>
distance <span class="token operator">=</span> <span class="token function">vecnorm</span><span class="token punctuation">(</span>curpoint_tr<span class="token operator">-</span>ctrl_points<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">%当前点坐标与每个控制点的距离构成的向量</span>
<span class="token keyword">if</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token function">distance</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0.1</span>  <span class="token comment">% 如果距离控制点比较近</span>
    <span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>ind<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>distance<span class="token operator">==</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token function">distance</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 当前点最近的那个点</span>
    <span class="token function">set</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span><span class="token string">'xdata'</span><span class="token punctuation">,</span><span class="token function">ctrl_points</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>ind<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">set</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span><span class="token string">'ydata'</span><span class="token punctuation">,</span><span class="token function">ctrl_points</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>ind<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">set</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span><span class="token string">'visible'</span><span class="token punctuation">,</span><span class="token string">'on'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">set</span><span class="token punctuation">(</span>gcf<span class="token punctuation">,</span><span class="token string">'WindowButtonMotionFcn'</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token operator">@</span>ButtonMotionFcn<span class="token punctuation">,</span>ind<span class="token punctuation">,</span>h<span class="token punctuation">,</span>myText<span class="token punctuation">,</span>h_bezier<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%设置鼠标移动响应</span>
<span class="token keyword">end</span>
<span class="token keyword">end</span></code></pre>
<h3 id="封装了一个选择点的方法">封装了一个选择点的方法</h3>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span>dataPoints<span class="token punctuation">,</span>h<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">cqj_selectPoints</span><span class="token punctuation">(</span>isclose<span class="token punctuation">,</span>x_axis<span class="token punctuation">,</span>y_axis<span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token operator">~</span><span class="token function">exist</span><span class="token punctuation">(</span><span class="token string">'isclose'</span><span class="token punctuation">,</span><span class="token string">'var'</span><span class="token punctuation">)</span>
    isclose <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>

<span class="token keyword">if</span> <span class="token operator">~</span><span class="token function">exist</span><span class="token punctuation">(</span><span class="token string">'x_axis'</span><span class="token punctuation">,</span><span class="token string">'var'</span><span class="token punctuation">)</span>
    x_axis <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token keyword">if</span> <span class="token operator">~</span><span class="token function">exist</span><span class="token punctuation">(</span><span class="token string">'y_axis'</span><span class="token punctuation">,</span><span class="token string">'var'</span><span class="token punctuation">)</span>
    y_axis <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token function">axis</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x_axis<span class="token punctuation">,</span>y_axis<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
grid on<span class="token punctuation">,</span>hold on
<span class="token function">questdlg</span><span class="token punctuation">(</span><span class="token string">'1.鼠标左键：选择新点   2.鼠标中键或右键：选择最后一个点'</span><span class="token punctuation">,</span><span class="token string">'操作'</span><span class="token punctuation">,</span><span class="token string">'ok'</span><span class="token punctuation">,</span><span class="token string">'ok'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">%% 从鼠标获取数据点</span>
<span class="token number">i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token number">1</span>
    <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
    tip <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'请选择第'</span><span class="token punctuation">,</span><span class="token function">num2str</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'个数据点'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">xlabel</span><span class="token punctuation">(</span>tip<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span>
        <span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>button<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">ginput</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">catch</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
    <span class="token function">dataPoints</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span>x<span class="token punctuation">;</span>y<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token number">i</span><span class="token operator">==</span><span class="token number">1</span>
        h <span class="token operator">=</span> <span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">dataPoints</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">dataPoints</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'b-o'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token function">set</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span><span class="token string">'XData'</span><span class="token punctuation">,</span><span class="token function">dataPoints</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">set</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span><span class="token string">'YData'</span><span class="token punctuation">,</span><span class="token function">dataPoints</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
    <span class="token keyword">if</span> button <span class="token operator">~=</span> <span class="token number">1</span>
        <span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>
<span class="token keyword">if</span> isclose
    <span class="token function">set</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span><span class="token string">'XData'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">dataPoints</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token function">dataPoints</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">set</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span><span class="token string">'YData'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">dataPoints</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token function">dataPoints</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token keyword">end</span></code></pre>
<h3 id="结果">结果</h3>
<p><img src="http://img.ifish.ink/2020/1103_1.gif"></p>
]]></content>
      <categories>
        <category>数学学习</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>MATLAB代码</tag>
        <tag>算法实现</tag>
      </tags>
  </entry>
  <entry>
    <title>Bezier曲线拟合数据点的几何作图法</title>
    <url>/post/7741e06a.html</url>
    <content><![CDATA[<blockquote>
<p>Bezier曲线拟合数据点的几何作图法MATLAB程序。</p>
</blockquote>
<h1 id="contents">Contents</h1>
<h3 id="左键选择点右键或中间结束">左键选择点，右键或中间结束</h3>
<pre class="language-MATLAB" data-language="MATLAB"><code class="language-MATLAB">clear
close all
figure;
axis([-5,5,-5,5]);
grid on;
title('Bezier曲线拟合');
questdlg('1.鼠标左键：选择新点   2.鼠标中键或右键：选择最后一个点','操作','ok','ok');</code></pre>
<span id="more"></span>
<p><img src="http://img.ifish.ink/figure/main_01.png"></p>
<h3 id="从鼠标获取数据点">从鼠标获取数据点</h3>
<pre class="language-MATLAB" data-language="MATLAB"><code class="language-MATLAB">i = 0;
while 1
    i = i+1;
    tip = ['请选择第',num2str(i),'个数据点'];
    xlabel(tip);
    try
    [x,y,button] = ginput(1);
    catch
        return;
    end
    hold on ,plot(x,y,'o');
    dataPoints(:,i) = [x;y];
    h1 = plot(dataPoints(1,:),dataPoints(2,:),'b');
    if button ~= 1
        xlabel('');
        break;
    end
end


for i = 0:0.01:1
    newData(:,int32(i*100)+1) = cqj_GetBezier3Point(dataPoints,i);
end
h2 = plot(newData(1,:),newData(2,:),'.-r');
legend([h1,h2],'原始点','3次Bezier曲线')</code></pre>
<p><img src="http://img.ifish.ink/figure/main_02.png"></p>
<h3 id="得到曲线参数为u的数据点">得到曲线参数为u的数据点</h3>
<pre class="language-MATLAB" data-language="MATLAB"><code class="language-MATLAB">function [ data ] = cqj_GetBezier3Point(dataPoints,u)
% 得到曲线参数为u的数据点
% dataPoints：初始点 2xn
data = dataPoints;
while 1
    if size(data,2) == 1
        break;
    end
    temp = zeros(size(data,1),size(data,2)-1);
    for i = 1:size(data,2)-1
        temp(:,i) = (1-u)*data(:,i)+u*data(:,i+1);
    end
    data = temp;
end
end</code></pre>
<p><img src="http://img.ifish.ink/figure/main_03.png"></p>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>数学学习</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>MATLAB代码</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduction to Data Science (0)</title>
    <url>/post/ids0.html</url>
    <content><![CDATA[<blockquote>
<p>在这个系列开始之前先附上几种常用的概率分布律、期望和方差。</p>
<p>参考书籍：《概率论与数理统计》 浙大第四版</p>
</blockquote>
<h3 id="离散型随机变量">离散型随机变量</h3>
<p>随机变量全部可能取到的值是有限个或者可列无限多个（可数），这种随机变量称为<strong>离散型随机变量</strong>。</p>
<h4 id="分布">(0-1)分布</h4>
<p>(0-1)分布的随机变量<span class="math inline">\(X\)</span>只可能取0与1，如果概率满足 <span class="math display">\[
P_k=P\{X=k\}=p^k(1-p)^{1-k},\quad k=0,1\qquad (0&lt;p&lt;1),
\]</span> 称<span class="math inline">\(X\)</span>服从参数为<span class="math inline">\(p\)</span>的(0-1)分布。</p>
<ul>
<li><p>分布律：<span class="math inline">\(P\{X=k\}=p^k(1-p)^{1-k},\quad
k=0,1\qquad (0&lt;p&lt;1)\)</span></p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"><span class="math inline">\(X\)</span></th>
<th style="text-align: center;">0</th>
<th style="text-align: center;">1</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><span class="math inline">\(P_k\)</span></td>
<td style="text-align: center;"><span class="math inline">\(1-p\)</span></td>
<td style="text-align: center;"><span class="math inline">\(p\)</span></td>
</tr>
</tbody>
</table></li>
<li><p>期望：<span class="math inline">\(\text{E}[X]=p\)</span></p></li>
<li><p>方差：<span class="math inline">\(\text{V}[X]=p(1-p)\)</span></p></li>
</ul>
<hr>
<h4 id="几何分布">几何分布</h4>
<p>进行重复独立试验，设每次试验的成功概率为<span class="math inline">\(p~(0&lt;p&lt;1)\)</span>，失败概率为<span class="math inline">\(q=1-p\)</span>，将试验进行到出现一次成功为止，所需的试验次数的记为<span class="math inline">\(X\)</span>，称<span class="math inline">\(X\)</span>是服从参数为<span class="math inline">\(p\)</span>的几何分布。</p>
<ul>
<li>分布律：<span class="math inline">\(P\{X=k\}=(1-p)^{k-1}p,\quad
k=1,2,\dots\)</span></li>
<li>期望：<span class="math inline">\(\text{E}[X]=\frac{1}{p}\)</span></li>
<li>方差：<span class="math inline">\(\text{V}[X]=\frac{1-p}{p^2}\)</span></li>
</ul>
<hr>
<h4 id="伯努利分布二项分布">伯努利分布/二项分布</h4>
<p>设试验<span class="math inline">\(E\)</span>只有两个可能的结果：<span class="math inline">\(A\)</span>与<span class="math inline">\(\bar{A}\)</span>，则称<span class="math inline">\(E\)</span>为伯努利试验。设<span class="math inline">\(P(A)=p~(0&lt;p&lt;1)\)</span>。将<span class="math inline">\(E\)</span>独立重复地进行<span class="math inline">\(n\)</span>次，则称这一串重复的独立试验为<span class="math inline">\(n\)</span>重伯努利试验。</p>
<ul>
<li>分布律：<span class="math inline">\(P\{X=k\}=\binom{n}{k}p^k(1-p)^{n-k},\quad
k=0,1,\dots,n\)</span></li>
<li>期望：<span class="math inline">\(\text{E}[X]=np\)</span></li>
<li>方差：<span class="math inline">\(\text{V}[X]=np(1-p)\)</span></li>
</ul>
<hr>
<h4 id="巴斯卡分布负二项分布">巴斯卡分布（负二项分布）</h4>
<p>进行重复独立试验，设每次试验的成功概率为<span class="math inline">\(p~(0&lt;p&lt;1)\)</span>，失败概率为<span class="math inline">\(q=1-p\)</span>，将试验进行到出现<span class="math inline">\(r\)</span>次成功为止，所需的试验次数的记为<span class="math inline">\(X\)</span>，称<span class="math inline">\(X\)</span>是服从参数为<span class="math inline">\(r,p\)</span>的巴斯卡（负二项）分布。</p>
<ul>
<li>分布律：<span class="math inline">\(P\{X=k\}=\binom{k-1}{r-1}p^r(1-p)^{k-r},\quad
k=r,r+1,\dots\)</span></li>
<li>期望：<span class="math inline">\(\text{E}[X]=\frac{r}{p}\)</span></li>
<li>方差：<span class="math inline">\(\text{V}[X]=\frac{r(1-p)}{p^2}\)</span></li>
</ul>
<hr>
<h4 id="泊松分布">泊松分布</h4>
<p>设随机变量<span class="math inline">\(X\)</span>所有可能取的值为<span class="math inline">\(0,1,2,\dots\)</span>，取各个值的概率为 <span class="math display">\[
P\{X=k\}=\frac{\lambda^ke^{-\lambda}}{k!},\quad \lambda&gt;0,\quad
k=0,1,2,\dots
\]</span> 称<span class="math inline">\(X\)</span>是服从<span class="math inline">\(\lambda\)</span>的泊松分布。特别地， <span class="math display">\[\sum_{k=0}^\infty
P\{X=k\}=\sum_{k=0}^\infty\frac{\lambda^ke^{-\lambda}}{k!}=e^{-\lambda}\sum_{k=0}^\infty\frac{\lambda^k}{k!}=e^{-\lambda}e^\lambda=1.\]</span></p>
<ul>
<li>分布律：<span class="math inline">\(P\{X=k\}=\frac{\lambda^ke^{-\lambda}}{k!},\quad
k=0,1,\dots\)</span></li>
<li>期望：<span class="math inline">\(\text{E}[X]=\lambda\)</span></li>
<li>方差：<span class="math inline">\(\text{V}[X]=\lambda\)</span></li>
</ul>
<blockquote>
<p>当伯努利分布(二项分布)的试验次数<span class="math inline">\(n\)</span>足够多，其分布近似于以<span class="math inline">\(\lambda=np\)</span>为参数的泊松分布，即<strong>泊松定理</strong>：设<span class="math inline">\(\lambda&gt;0\)</span>是常数，<span class="math inline">\(n\)</span>是任意正整数，设<span class="math inline">\(\lambda=np\)</span>，则对非负整数<span class="math inline">\(k\le n\)</span>，有 <span class="math display">\[\lim_{n\to\infty}\binom{n}{k}p^k(1-p)^{n-k}=\frac{\lambda^ke^{-\lambda}}{k!}\]</span></p>
</blockquote>
<hr>
<h3 id="连续型随机变量">连续型随机变量</h3>
<p>如果对于随机变量<span class="math inline">\(X\)</span>的分布函数<span class="math inline">\(F(x)\)</span>，存在非负函数<span class="math inline">\(f(x)\)</span>，使得对于任意实数<span class="math inline">\(x\)</span>，有 <span class="math display">\[F(x)=P\{X\le x\}=\int_{-\infty}^x f(t)dt\]</span>
则称<span class="math inline">\(X\)</span>为<strong>连续型随机变量</strong>，其中<span class="math inline">\(f(x)\)</span>称为<span class="math inline">\(X\)</span>的<strong>概率密度函数</strong>。</p>
<h4 id="均匀分布">均匀分布</h4>
<p>如果连续型随机变量<span class="math inline">\(X\)</span>具有概率密度函数 <span class="math display">\[\begin{equation}
f(x) =
\begin{cases}
  \frac{1}{b-a}, &amp; a&lt;x&lt;b, \\
  0, &amp; \text{else}
\end{cases}
\end{equation}\]</span> 则称<span class="math inline">\(X\)</span>在区间<span class="math inline">\((a,b)\)</span>上的服从均匀分布。</p>
<ul>
<li>期望：<span class="math inline">\(\text{E}[X]=\frac{a+b}{2}\)</span></li>
<li>方差：<span class="math inline">\(\text{V}[X]=\frac{(b-a)^2}{12}\)</span></li>
</ul>
<hr>
<h4 id="指数分布">指数分布</h4>
<p>如果连续型随机变量<span class="math inline">\(X\)</span>具有概率密度函数 <span class="math display">\[\begin{equation}
f(x) =
\begin{cases}
  \frac{1}{\theta}e^{\frac{-x}{\theta}}, &amp; x&gt;0, \\
  0, &amp; \text{else}
\end{cases}
\end{equation}\]</span> 则称<span class="math inline">\(X\)</span>是服从参数为<span class="math inline">\(\theta\)</span>的指数分布。</p>
<ul>
<li>期望：<span class="math inline">\(\text{E}[X]=\theta\)</span></li>
<li>方差：<span class="math inline">\(\text{V}[X]=\theta^2\)</span></li>
</ul>
<hr>
<h4 id="正态高斯分布">正态（高斯）分布</h4>
<p>如果连续型随机变量<span class="math inline">\(X\)</span>具有概率密度函数 <span class="math display">\[\begin{equation}
f(x) = \frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(x-\mu)^2}{2\sigma^2}},\quad
-\infty&lt;x&lt;\infty,
\end{equation}\]</span> 其中<span class="math inline">\(\mu,\sigma~(\sigma&gt;0)\)</span>为常数，则称<span class="math inline">\(X\)</span>是服从参数为<span class="math inline">\(\mu,\sigma\)</span>的正态分布（高斯分布）。</p>
<ul>
<li>期望：<span class="math inline">\(\text{E}[X]=\mu\)</span></li>
<li>方差：<span class="math inline">\(\text{V}[X]=\sigma^2\)</span></li>
</ul>
<blockquote>
<p>特别地，当<span class="math inline">\(\mu=0\)</span>，<span class="math inline">\(\sigma=1\)</span>时称随机变量<span class="math inline">\(X\)</span>服从<strong>标准正态分布</strong>。</p>
</blockquote>
]]></content>
      <categories>
        <category>数学学习</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>统计</tag>
      </tags>
  </entry>
  <entry>
    <title>Github上 fork了别人的代码 本地更新主分支代码</title>
    <url>/post/8f4cbc0c.html</url>
    <content><![CDATA[<h3 id="github上-fork了别人的代码-本地更新主分支代码">Github上
fork了别人的代码 本地更新主分支代码</h3>
<ul>
<li><p>查看本地仓库项目目录：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token parameter variable">-v</span></code></pre></li>
<li><p>添加上游项目地址：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> <span class="token operator">&lt;</span>remote-name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>your upstream URL<span class="token operator">&gt;</span></code></pre>
<span id="more"></span>
<p>例如我从https://github.com/xxx/xxxx.git这个项目地址fork，则指令为：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> test1 https://github.com/xxx/xxxx.git</code></pre></li>
</ul>
<hr>
<p>上面是第一次配置即可，下面则每次从上游更新时执行</p>
<ul>
<li><p>从上游提取：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> fetch <span class="token operator">&lt;</span>remote-name<span class="token operator">&gt;</span></code></pre></li>
<li><p>合并：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> merge <span class="token operator">&lt;</span>remote-name<span class="token operator">&gt;</span>/<span class="token operator">&lt;</span>branches-name<span class="token operator">&gt;</span></code></pre></li>
<li><p>上传：</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push</code></pre></li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>git</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduction to Data Science (1)</title>
    <url>/post/ids1.html</url>
    <content><![CDATA[<blockquote>
<p>本节将简要介绍参数估计，主要讨论矩估计(method of
moments)和极大似然估计(maximum likelihood estimation)。</p>
<p>参考书籍：《概率论与数理统计》 浙大第四版</p>
</blockquote>
<h4 id="矩估计">矩估计</h4>
<p>设<span class="math inline">\(X_1,X_2,\dots,X_n\)</span>是来自随机变量<span class="math inline">\(X\)</span>的样本，如果<span class="math inline">\(X\)</span>是分布律为<span class="math inline">\(P\{X=x\}=p(x;\theta_1,\dots,\theta_k)\)</span>的离散型随机变量，其中参数<span class="math inline">\(\theta_1,\dots,\theta_k\)</span>为待估计参数。总体<span class="math inline">\(X\)</span>的<span class="math inline">\(m\)</span>阶矩为 <span class="math display">\[\mu_m(\theta_1,\dots,\theta_k)=\text{E}[X^m]=\sum_{x\in
R_X}x^mp(x;\theta_1,\theta_2,\dots,\theta_k),\]</span> 其中<span class="math inline">\(R_X\)</span>是<span class="math inline">\(X\)</span>可能的取值范围。如果随机变量<span class="math inline">\(X\)</span>是概率密度为<span class="math inline">\(f(x;\theta_1,\theta_2,\dots,\theta_k)\)</span>的连续型随机变量，假设总体<span class="math inline">\(X\)</span>的<span class="math inline">\(m\)</span>阶矩是 <span class="math display">\[\mu_m(\theta_1,\dots,\theta_k)=\text{E}[X^m]=\int_{-\infty}^{\infty}x^mf(x;\theta_1,\theta_2,\dots,\theta_k)dx.\]</span>
如果<span class="math inline">\(X\)</span>的前<span class="math inline">\(k\)</span>阶矩存在。由于样本矩<span class="math inline">\(A_m=\frac{1}{n}\sum_{i=1}^nX_i^m\)</span>依概率收敛于相应的总体矩<span class="math inline">\(\mu_m\)</span>。用样本矩作为相应的总体矩的估计量。对于<span class="math inline">\(m=1,2,\dots,k\)</span>，可以建立如下方程组： <span class="math display">\[\begin{equation*}
\left\{
\begin{array}{c}
\mu_1(\theta_1,\dots,\theta_k)=A_1,\\
\mu_2(\theta_1,\dots,\theta_k)=A_2,\\
\vdots\\
\mu_k(\theta_1,\dots,\theta_k)=A_k
\end{array}
\right.
\end{equation*}\]</span> 通过求解出<span class="math inline">\(\theta_1,\dots,\theta_k\)</span>。这样的估计量被称为<strong>矩估计量</strong>。</p>
<hr>
<h4 id="极大似然估计">极大似然估计</h4>
<p>设<span class="math inline">\(X_1,X_2,\dots,X_n\)</span>是来自随机变量<span class="math inline">\(X\)</span>的样本，如果<span class="math inline">\(X\)</span>是分布律为<span class="math inline">\(P\{X=x\}=p(x;\theta_1,\dots,\theta_k)\)</span>的离散型随机变量，则<span class="math inline">\(X_1,X_2,\dots,X_n\)</span>的联合分布律为 <span class="math display">\[\prod_{i=1}^np(x_i;\theta_1,\dots,\theta_k),\]</span>
假如已知样本<span class="math inline">\(X_1,X_2,\dots,X_n\)</span>对应的样本值是<span class="math inline">\(x_1,x_2,\dots,x_n\)</span>，则事件<span class="math inline">\(\{X_i=x_i,~i=1,\dots,n\}\)</span>的概率为 <span class="math display">\[P\{X_i=x_i,~i=1,\dots,n\}=\prod_{i=1}^np(x_i;\theta_1,\dots,\theta_k)=L(\theta_1,\dots,\theta_k)，\]</span>
由于该事件为观测值对应的事件，其已经发生，表明这个概率值较大，给予该原则最大化函数<span class="math inline">\(L(\theta_1,\dots,\theta_k)\)</span>，该函数被称为样本的<strong>似然函数</strong>。则极大似然估计值为
<span class="math display">\[(\hat{\theta}_1,\dots,\hat{\theta}_k)=\max_{\theta_1,\dots,\theta_k}\prod_{i=1}^np(x_i;\theta_1,\dots,\theta_k).\]</span>
对于连续型随机变量，假设其对应的概率密度函数为是概率密度为<span class="math inline">\(f(x;\theta_1,\theta_2,\dots,\theta_k)\)</span>，同理有极大似然估计量为
<span class="math display">\[(\hat{\theta}_1,\dots,\hat{\theta}_k)=\max_{\theta_1,\dots,\theta_k}\prod_{i=1}^nf(x_i;\theta_1,\dots,\theta_k).\]</span>
对于该优化问题的求解，当<span class="math inline">\(p(x_i;\theta_1,\dots,\theta_k)\)</span>或<span class="math inline">\(f(x_i;\theta_1,\dots,\theta_k)\)</span>关于<span class="math inline">\(\theta_j\)</span>可微，则极大似然估计值可从方程组
<span class="math display">\[\begin{equation*}
\left\{
\begin{array}{c}
\frac{\partial}{\partial\theta_1}L(\theta_1,\dots,\theta_k)=0,\\
\frac{\partial}{\partial\theta_2}L(\theta_1,\dots,\theta_k)=0,\\
\vdots\\
\frac{\partial}{\partial\theta_k}L(\theta_1,\dots,\theta_k)=0
\end{array}
\right.
\end{equation*}\]</span> 求得。由于<span class="math inline">\(L(\theta_1,\dots,\theta_k)\)</span>与<span class="math inline">\(\log
L(\theta_1,\dots,\theta_k)\)</span>在同一处取得极值，因此极大似然估计值亦可通过求解下面的<strong>对数似然方程组</strong>获得。
<span class="math display">\[\begin{equation*}
\left\{
\begin{array}{c}
\frac{\partial}{\partial\theta_1}\log
L(\theta_1,\dots,\theta_k)=\sum_{i=1}^n\log
p(x_1;\theta_1,\dots,\theta_k)=0,\\
\frac{\partial}{\partial\theta_2}\log
L(\theta_1,\dots,\theta_k)=\sum_{i=1}^n\log
p(x_1;\theta_1,\dots,\theta_k)=0,\\
\vdots\\
\frac{\partial}{\partial\theta_k}\log
L(\theta_1,\dots,\theta_k)=\sum_{i=1}^n\log
p(x_1;\theta_1,\dots,\theta_k)=0
\end{array}
\right.\qquad \text{（离散型随机变量）}
\end{equation*}\]</span> 或 <span class="math display">\[\begin{equation*}
\left\{
\begin{array}{c}
\frac{\partial}{\partial\theta_1}\log
L(\theta_1,\dots,\theta_k)=\sum_{i=1}^n\log
f(x_1;\theta_1,\dots,\theta_k)=0,\\
\frac{\partial}{\partial\theta_2}\log
L(\theta_1,\dots,\theta_k)=\sum_{i=1}^n\log
f(x_1;\theta_1,\dots,\theta_k)=0,\\
\vdots\\
\frac{\partial}{\partial\theta_k}\log
L(\theta_1,\dots,\theta_k)=\sum_{i=1}^n\log
f(x_1;\theta_1,\dots,\theta_k)=0
\end{array}
\right.\qquad \text{（连续型随机变量）}
\end{equation*}\]</span></p>
]]></content>
      <categories>
        <category>数学学习</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>统计</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduction to Data Science (2)</title>
    <url>/post/ids2.html</url>
    <content><![CDATA[<blockquote>
<p>本节介绍无偏估计、平均二次误差以及Cramér-Rao下界。</p>
<p>参考书籍：<em>Statistical Inference</em>, Casella and Berger,
Duxbury, 2th edition.</p>
</blockquote>
<h4 id="无偏性unbiasedness">无偏性(Unbiasedness)</h4>
<p>参数<span class="math inline">\(\theta\)</span>的估计量<span class="math inline">\(\hat{\theta}\)</span>关于<span class="math inline">\(\theta\)</span>是无偏的，即： <span class="math display">\[\text{E}[\hat{\theta}(X)]=\theta_0,\]</span>
其中<span class="math inline">\(\theta_0\)</span>是真实参数。将<span class="math inline">\(\text{Bias}_{\theta_0}[\hat{\theta}(X)]=\text{E}[\hat{\theta}(X)]-\theta_0\)</span>称之为偏差。</p>
<ul>
<li>🌰例1. <span class="math inline">\(X_1,\dots,X_n\)</span>服从参数为<span class="math inline">\(\theta_0\)</span>的(0-1)分布，其极大似然估计和矩估计均为<span class="math inline">\(\hat{\theta}(X)=\frac{1}{n}\sum\limits_{i=1}^nX_i=\bar{X}\)</span>，是无偏估计量。
<span class="math display">\[\text{E}[\hat{\theta}(X)]=\text{E}\left[\frac{1}{n}\sum_{i=1}^nX_i\right]=\frac{1}{n}\text{E}\left[\sum_{i=1}^nX_i\right]=\frac{1}{n}\sum_{i=1}^n\text{E}\left[X_i\right]=\frac{1}{n}
\cdot n\cdot\theta_0=\theta_0.\]</span></li>
</ul>
<blockquote>
<p><span class="math inline">\(\text{E}[a\cdot
X]=a\cdot\text{E}[X]\)</span></p>
<p><span class="math inline">\(\text{E}[X+Y]=\text{E}[X]+\text{E}[Y]\)</span></p>
<p><span class="math inline">\(\text{E}[X]=\int_{-\infty}^{\infty}x\cdot
f(x)dx\)</span></p>
<p><span class="math inline">\(\text{V}[X]=\text{E}[(X-\text{E}[X])^2]=\text{E}[X^2]-\text{E}^2[X]\)</span></p>
</blockquote>
<hr>
<h4 id="平均二次误差mean-squared-error">平均二次误差(Mean Squared
Error)</h4>
<p>参数<span class="math inline">\(\theta\)</span>的估计量<span class="math inline">\(\hat{\theta}\)</span>的评估二次误差是关于<span class="math inline">\(\theta_0\)</span>的函数，被定义为：<span class="math inline">\(\text{E}_{\theta_0}[(\hat{\theta}(X)-\theta_0)^2]\)</span>。</p>
<ul>
<li>🌰例2. <span class="math inline">\(X_1,\dots,X_n\)</span>服从参数为<span class="math inline">\(\theta_0\)</span>的(0-1)分布，参数估计量<span class="math inline">\(\hat{\theta}(X)=\bar{X}\)</span>，该参数估计量的平均二次误差为
<span class="math display">\[\text{MSE}=\text{E}[(\hat{\theta}(X)-\theta_0)^2]=\text{E}[(\hat{\theta}(X)-\text{E}[\hat{\theta}(X)])]=\text{V}[\hat{\theta}(X)]=\frac{1}{n^2}\sum_{i=1}^n\text{V}[X_i]=\frac{1}{n^2}\cdot
n\cdot \theta_0(1-\theta_0)=\frac{\theta_0(1-\theta_0)}{n}\]</span>
注：当<span class="math inline">\(n\to\infty\)</span>时，平均二次误差<span class="math inline">\(\text{MSE}\)</span>趋于0，即估计量趋近于真实值<span class="math inline">\(\theta_0\)</span>。</li>
</ul>
<blockquote>
<p><span class="math inline">\(\text{V}[a\cdot X]=a^2\cdot
\text{V}[X]\)</span></p>
<p><span class="math inline">\(\text{V}[X+Y]=\text{V}[X]+\text{V}[Y]+2\cdot\text{Cov}[X,Y]\)</span></p>
</blockquote>
<p>平均二次误差可以被拆分成两部分： <span class="math display">\[\begin{align}
\text{MSE}&amp;=\text{E}[(\hat{\theta}(X)-\theta_0)^2]\\
&amp;=\text{E}\left[\left(\hat{\theta}(X)-\text{E}[\hat{\theta}(X)]+\text{E}[\hat{\theta}(X)]-\theta_0\right)^2\right]\\
&amp;=\text{E}\left[(\hat{\theta}(X)-\text{E}[\hat{\theta}(X)])^2+2(\hat{\theta}(X)-\text{E}[\hat{\theta}(X)])(\text{E}[\hat{\theta}(X)]-\theta_0)+(\text{E}[\hat{\theta}(X)]-\theta_0)^2\right]\\
&amp;=\text{E}\left[(\hat{\theta}(X)-\text{E}[\hat{\theta}(X)])^2\right]+2(\text{E}[\hat{\theta}(X)]-\theta_0)\cdot\text{E}\left[(\hat{\theta}(X)-\text{E}[\hat{\theta}(X)])\right]+\left(\text{E}[\hat{\theta}(X)]-\theta_0\right)^2\\
&amp;=\text{V}[\hat{\theta}(X)]+\text{Bisa}_{\theta_0}^2[\hat{\theta}(X)]
\end{align}\]</span>
即平均二次误差为估计量的方差与与偏差的平方之和。</p>
<hr>
<h4 id="cramér-rao下界">Cramér-Rao下界</h4>
<p>如果<span class="math inline">\(X_1,\dots,X_n\)</span>是互相独立，服从密度函数为<span class="math inline">\(f(x;\theta)\)</span>的分布。则任何无偏估计量<span class="math inline">\(\hat{\theta}\)</span>的方差满足： <span class="math display">\[\text{V}[\hat{\theta}(X)]\ge\frac{1}{n\cdot
I_{X_1}(\theta)}\]</span> 其中<span class="math inline">\(I_{X_1}(\theta)\)</span>被称为Fisher信息，定义为：
<span class="math display">\[\begin{align}
I_{X_1}(\theta)&amp;=\text{E}\left[\left(\frac{\partial}{\partial\theta}l_{X_1}(x;\theta)\right)^2\right]:=\text{E}[l'_{X_1}(\theta)^2]\\
&amp;=-\text{E}\left[\frac{\partial^2}{\partial\theta^2}l_{X_1}(x;\theta)\right]:=-\text{E}[l''_{X_1}(\theta)].
\end{align}\]</span> 其中<span class="math inline">\(l_{X_1}(\theta)=\log
f_{X_1}(x;\theta)\)</span></p>
<ul>
<li><em>证明</em>：令<span class="math inline">\(Y=\hat{\theta}(X)\)</span>，<span class="math inline">\(Z=l'_X(\theta)\)</span>，由于<span class="math inline">\(Y,Z\)</span>的相关系数介于<span class="math inline">\([-1,1]\)</span>，即 <span class="math display">\[-1\le\frac{\text{Cov}[Y,Z]}{\sqrt{\text{V}[Y]\cdot\text{V}[Z]}}\le
1,\]</span> 由此可得 <span class="math display">\[\begin{equation}
\text{V}[Y]=\text{V}[\hat{\theta}(X)]\ge\frac{\text{Cov}^2[Y,Z]}{\text{V}[Z]},
\end{equation}\]</span> 观察上式，现需替换分子<span class="math inline">\(\text{Cov}^2[Y,Z]\)</span>和分母<span class="math inline">\(\text{V}[Z]\)</span>，首先<span class="math inline">\(\text{V}[Z]\)</span>可以被写作 <span class="math display">\[\begin{align}
\text{V}[Z]&amp;=\text{V}[l'_X(\theta)]=\underbrace{\text{V}\left[\frac{\partial}{\partial\theta}\log
f_X(x;\theta)\right]}_{对数似然函数}=\underbrace{\text{V}\left[\frac{\partial}{\partial\theta}\log\prod_{i=1}^nf_{X_i}(x;\theta)\right]}_{\log(ab)=\log
a+\log b}\\
&amp;=\underbrace{\text{V}\left[\sum_{i=1}^n\frac{\partial}{\partial\theta}\log
f_{X_i}(x;\theta)\right]}_{X\text{是相互独立的}}=\sum_{i=1}^n\text{V}\left[\frac{\partial}{\partial\theta}\log
f_{X_i}(x;\theta)\right]\\
&amp;=n\cdot\text{V}[l'_{X_1}(\theta)]=n\cdot\left\{\text{E}[l'_{X_1}(\theta)^2]-\text{E}^2[l'_{X_1}(\theta)]\right\}
\end{align}\]</span> 由期望的定义有 <span class="math display">\[\begin{align}
&amp;\text{E}[l'_{X_1}(\theta)]=\int_{-\infty}^{\infty}l'_{X_1}(\theta)f_{X_1}(x;\theta)dx=\int_{-\infty}^{\infty}\frac{\partial}{\partial\theta}\log
f_{X_1}(x;\theta)\cdot f_{X_1}(x;\theta)dx\\
=&amp;\int_{-\infty}^{\infty}\frac{\frac{\partial}{\partial\theta}f_{X_1}(x;\theta)}{f_{X_1}(x;\theta)}f_{X_1}(x;\theta)dx=\int_{-\infty}^{\infty}{\frac{\partial}{\partial\theta}f_{X_1}(x;\theta)}dx=\frac{\partial}{\partial\theta}\underbrace{\int_{-\infty}^{\infty}f_{X_1}(x;\theta)dx}_{\text{概率密度函数积分为1}}=0,
\end{align}\]</span> 即<span class="math inline">\(\text{V}[Z]=n\cdot\text{E}[l'_{X_1}(\theta)^2]=n\cdot
I_{X_1}(\theta)\)</span>，根据协方差定义 <span class="math display">\[\begin{align}
\text{Cov}[Y,Z]&amp;=\text{Cov}[\hat{\theta}(X),l'_X(\theta)]=\text{E}[\hat{\theta}(X)\cdot
l'_X(\theta)]-\text{E}[\hat{\theta}(X)]\cdot\text{E}[l'_X(\theta)]\\
&amp;=\text{E}[\hat{\theta}(X)\cdot
l'_X(\theta)]-\text{E}[\hat{\theta}(X)]\cdot
n\cdot\underbrace{\text{E}[l'_{X_1}(\theta)]}_{0}=\text{E}[\hat{\theta}(X)\cdot
l'_X(\theta)],
\end{align}\]</span> 再由定义 <span class="math display">\[\begin{align}
\text{E}[\hat{\theta}(X)\cdot
l'_X(\theta)]=\int_{-\infty}^{\infty}\hat{\theta}(X)\frac{\frac{\partial}{\partial\theta}f_X(x;\theta)}{f_X(x;\theta)}f_X(x;\theta)dx=\frac{\partial}{\partial\theta}\int_{-\infty}^{\infty}\hat{\theta}\cdot
f_X(x;\theta)dx=\frac{\partial}{\partial\theta}\text{E}[\hat{\theta}(X)]=1,
\end{align}\]</span> 即<span class="math inline">\(\text{Cov}[Y,Z]=1\)</span>，综上有<span class="math inline">\(\text{V}[\hat{\theta}(X)]\ge\left(n\cdot
I_{X_i}(\theta)\right)^{-1}\)</span>，得证。</li>
</ul>
]]></content>
      <categories>
        <category>数学学习</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>统计</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenSubdiv + Visual Studio环境配置</title>
    <url>/post/a507e481.html</url>
    <content><![CDATA[<blockquote>
<p>本文主要讲述了OpenSubdiv开源库+Visual Studio的环境搭建</p>
</blockquote>
<blockquote>
<p>（本文是根据自己实际操作所述，由于本人知识水平有限，文中难免会出现错误之处，欢迎指正，邮箱
<strong>qingjun_chang@163.com</strong>。转载请注明出处：https://ifish.ink
） （先前条件：<strong>win7系统</strong> 已安装<strong><a href="https://www.visualstudio.com/zh-hans/downloads/?rr=https%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DONpFewA8iJADJ6k-0Vh-e0ksVaeZ1GHtaq69v0CmD1rmI69oYDQkXG0TB-OTaHhjT6-_LmULT-knoIdE9yhmmq%26wd%3D%26eqid%3Dd2d58bc800015f450000000659ddca4f">Visual
Studio</a></strong>环境，相关文件在附件） <span id="more"></span> * * *</p>
</blockquote>
<h2 id="下载所需要的资源">1.下载所需要的资源</h2>
<p>需要的资源文件有<a href="http://graphics.pixar.com/opensubdiv/docs/intro.html">OpenSubdiv</a>开源库的源代码、<a href="https://cmake.org/download/">cmake</a>（跨平台的安装、编译工具）、OpenGL的两款扩展库glew和glfw。
​&nbsp;<strong>OpenSubdiv的源代码</strong>：如已安装git工具，点击<a href="https://github.com/PixarAnimationStudios/OpenSubdiv.git">这里</a>可直接从GitHub上获取；如果没有git工具可以直接用我附件提供的源代码OpenSubdiv-master.zip，然后解压。我的路径为：d:/../OpenSubdiv-master/该目录内容如下图所示（git方式获取的可能有细微差异）
<img src="http://img.ifish.ink/figure/1.png" alt="fig1"> ​
&nbsp;<strong>cmake的安装</strong>：可直接从<a href="https://cmake.org/download/">cmake官网</a>下载二进制文件，64位系统如下图所示。.msi文件下载完成后，按照下述方法安装即可。
<img src="http://img.ifish.ink/figure/2.png" alt="fig2"></p>
<ul>
<li><p>双击安装，会弹出如下界面，点击“Next”按钮，进入下一步</p></li>
<li><p>同意CMake的条款，点击“Next”按钮，进入到下一步</p></li>
<li><p>添加环境变量，选中“<em>Add CMake to the system PATH for the all
user</em>”,点击“<em>Next</em>”按钮。（也可以选择添加到当前用户“<em>Add
CMake to the system PATH for the current user</em>”）</p></li>
<li><p>选择安装目录，安装即可。 <strong>glew</strong>：GLEW ：<a href="http://glew.sourceforge.net">http://glew.sourceforge.net</a>
如图所示可以下载二进制文件，或者用git克隆也可。</p></li>
</ul>
<p><img src="http://img.ifish.ink/figure/2.png" alt="fig3"> <img src="http://img.ifish.ink/figure/4.png" alt="fig4"> ​
<strong>glfw</strong>：GLfW ：<a href="http://www.glfw.org/">http://www.glfw.org/</a>
如图所示可以下载压缩文件，或者用git克隆也可。 <img src="http://img.ifish.ink/figure/5.png" alt="fig5"> <img src="http://img.ifish.ink/figure/6.png" alt="fig6"></p>
<hr>
<h2 id="cmake编译glfw">2.Cmake编译glfw</h2>
<h4 id="a.打开cmake-gui选择源代码目录和构建路径">a.打开Cmake
GUI选择源代码目录和构建路径：</h4>
<p><img src="http://img.ifish.ink/figure/7.png" alt="fig7"> <img src="http://img.ifish.ink/figure/8.png" alt="fig8"></p>
<h4 id="b.单击configure选择是并根据自己vs版本选择">b.单击Configure，选择“是”，并根据自己VS版本选择</h4>
<p><img src="http://img.ifish.ink/figure/9.png" alt="fig9"> <img src="http://img.ifish.ink/figure/10.png" alt="fig10"></p>
<h4 id="c.单击finish出现红色后再次点击configure出现configuring-done即可">c.单击Finish，出现红色后再次点击Configure，出现‘Configuring
done’即可</h4>
<p><img src="http://img.ifish.ink/figure/11.png" alt="fig11"> <img src="http://img.ifish.ink/figure/12.png" alt="fig12"></p>
<h4 id="d.单击generate出现generating-done完成">d.单击Generate，出现Generating
done完成</h4>
<figure>
<img src="http://img.ifish.ink/figure/13.png" alt="fig13">
<figcaption aria-hidden="true">fig13</figcaption>
</figure>
<hr>
<h2 id="cmake编译opensubdiv">3.Cmake编译OpenSubdiv</h2>
<p>Win+R打开CMD窗口，进入到OpenSubdiv-master目录下拷贝下面黄色部分全部命令后回车：（路径根据自己情况做相应改变，VS2015则为VS14,VS2010为VS10，其余的自己可以查一下版本根据需要变更</p>
<pre class="language-none"><code class="language-none">"d:/Cmake3.8.0/bin/cmake.exe" -G "Visual Studio 14 Win64" -DGLEW_LOCATION=[d:/glew/lib/Release/x64] -DGLEW_INCLUDE_DIR=[d:\glew\include\] -DGLEW_LIBRARY=[d:\glew\lib\] -DGLFW_LOCATION=[d:/glfw/bd/src/Release] -DNO_PTEX=1 -DNO_DOC=1 -DNO_OMP=1 -DNO_TBB=1 -DNO_CUDA=1 -DNO_OPENCL=1 -DNO_CLEW=1</code></pre>
<p>NO_PTEX=1表示为安装PTEX纹理库，如需要可仿照GLEW和GLFW的操作方法进行修改命令。
<img src="http://img.ifish.ink/figure/14.png" alt="fig14">
按下回车键： <img src="http://img.ifish.ink/figure/15.png" alt="fig15"> 完成！！！</p>
<hr>
<h2 id="vs下编译opensubdiv">4.VS下编译OpenSubdiv</h2>
<p>完成上述操作后，你会看见你的../OpenSubdiv-master/目录下会有一个OpenSubdiv.sln的解决方案，用Visual
Studio打开此文件 <img src="http://img.ifish.ink/figure/16.png" alt="fig16">
点击菜单栏“生成”→“批生成”，将所有的ALL_BUILD选中，点击“生成” <img src="http://img.ifish.ink/figure/17.png" alt="fig17">
生成过程需要一点时间，请耐心等待…… <img src="http://img.ifish.ink/figure/18.png" alt="fig18"> 生成成功 <img src="http://img.ifish.ink/figure/19.png" alt="fig19">
测试：选中一个例子右击选择“设为启动项目”，然后<strong>Ctrl+F5</strong>运行
<img src="http://img.ifish.ink/figure/20.png" alt="fig20">
运行后如图所示： <img src="http://img.ifish.ink/figure/21.png" alt="fig21"> 其余例子也可同理运行。 谢谢阅读！！！</p>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Try Something New for 30 Days(Matt Cutts)(TED视频)</title>
    <url>/post/7606ecde.html</url>
    <content><![CDATA[<blockquote>
<p>摘自TED里的一个视频，原视频地址：</p>
</blockquote>
<span id="more"></span>
<p><strong><a href="https://www.ted.com/talks/matt_cutts_try_something_new_for_30_days#t-94596">Matt
Cutts: Try Something New for 30 Days</a></strong> <a href="http://img.ifish.ink/res/MC.pptx">PPT下载</a></p>
<h3 id="中文文本">中文文本:</h3>
<p>几年前， 我感觉对老一套感到枯燥乏味， 所以我决定追随
伟大的美国哲学家摩根·斯普尔洛克的脚步， 尝试做新事情30天。
这个想法的确是非常简单。 考虑下，你常想在你生命中做的一些事情
接下来30天尝试做这些。 这就是， 30天刚好是这么一段合适的时间
去养成一个新的习惯或者改掉一个习惯-- 例如看新闻 -- 在你生活中。
当我在30天做这些挑战性事情时，我学到以下一些事。 第一件事是，
取代了飞逝而过易被遗忘的岁月的是 这段时间非常的更加令人难忘。
挑战的一部分是要一个月内每天我要去拍摄一张照片。
我清楚地记得那一天我所处的位置 我都在干什么。 我也注意到
随着我开始做更多的，更难的30天里具有挑战性的事时， 我自信心也增强了。
我从一个台式计算机宅男极客 变成了一个爱骑自行车去工作的人-- 为了玩乐。
甚至去年，我完成了在非洲最高山峰 乞力马扎罗山的远足。
在我开始这30天做挑战性的事之前 我从来没有这样爱冒险过。 我也认识到
如果你真想一些槽糕透顶的事， 你可以在30天里做这些事。 你曾想写小说吗？
每年11月， 数以万计的人们 在30天里，从零起点 尝试写他们自己的5万字小说。
这结果就是，你所要去做的事 就是每天写1667个字 要写一个月。
所以我做到了。 顺便说一下，秘密是除非在一天里你已经写完了1667个字，
要不你就甭想睡觉。 你可能被剥夺睡眠， 但你将会完成你的小说。
那么我写的书会是下一部伟大的美国小说吗？ 不是的。我在一个月内写完它。
它看上去太可怕了。 但在我的余生， 如果我在一个TED聚会上遇见约翰·霍奇曼，
我不必开口说， “我是一个电脑科学家。”
不，不会的，如果我想我可以说，“我是一个小说家。” （笑声）
我这儿想提的最后一件事。 当我做些小的，持续性的变化，
我可以不断尝试做的事时， 我学到我可以把它们更容易地坚持做下来。
这和又大又疯狂的具有挑战性的事情无关。 事实上，它们的乐趣无穷。
但是，它们就不太可能坚持做下来。 当我在30天里拒绝吃糖果，
31天后看上去就像这样。 （笑声） 所以我给大家提的问题是：
大家还在等什么呀？ 我保准大家在未来的30天 会去经历
你喜欢或者不喜欢的事， 那么为什么不考虑一些 你常想去尝试
并在未来30天里试试 给自己一个机会。 谢谢。 （掌声）</p>
<hr>
<h3 id="english-text">English Text:</h3>
<p>A few years ago, I felt like I was stuck in a rut, so I decided to
follow in the footsteps of the great American philosopher, Morgan
Spurlock, and try something new for 30 days. The idea is actually pretty
simple. Think about something you've always wanted to add to your life
and try it for the next 30 days. It turns out 30 days is just about the
right amount of time to add a new habit or subtract a habit -- like
watching the news -- from your life. There's a few things I learned
while doing these 30-day challenges. The first was, instead of the
months flying by, forgotten, the time was much more memorable. This was
part of a challenge I did to take a picture every day for a month. And I
remember exactly where I was and what I was doing that day. I also
noticed that as I started to do more and harder 30-day challenges, my
self-confidence grew. I went from desk-dwelling computer nerd to the
kind of guy who bikes to work. For fun! (Laughter) Even last year, I
ended up hiking up Mt. Kilimanjaro, the highest mountain in Africa. I
would never have been that adventurous before I started my 30-day
challenges. I also figured out that if you really want something badly
enough, you can do anything for 30 days. Have you ever wanted to write a
novel? Every November, tens of thousands of people try to write their
own 50,000-word novel, from scratch, in 30 days. It turns out, all you
have to do is write 1,667 words a day for a month. So I did. By the way,
the secret is not to go to sleep until you've written your words for the
day. You might be sleep-deprived, but you'll finish your novel. Now is
my book the next great American novel? No. I wrote it in a month. It's
awful. (Laughter) But for the rest of my life, if I meet John Hodgman at
a TED party, I don't have to say, "I'm a computer scientist." No, no, if
I want to, I can say, "I'm a novelist." (Laughter) So here's one last
thing I'd like to mention. I learned that when I made small, sustainable
changes, things I could keep doing, they were more likely to stick.
There's nothing wrong with big, crazy challenges. In fact, they're a ton
of fun. But they're less likely to stick. When I gave up sugar for 30
days, day 31 looked like this. (Laughter) So here's my question to you:
What are you waiting for? I guarantee you the next 30 days are going to
pass whether you like it or not, so why not think about something you
have always wanted to try and give it a shot! For the next 30 days.
Thanks. (Applause)</p>
]]></content>
      <categories>
        <category>视频</category>
      </categories>
      <tags>
        <tag>TED</tag>
        <tag>摘</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>WordPress插件更新出现Briefly unavailable for scheduled maintenance. Check back in a minute</title>
    <url>/post/563c2d.html</url>
    <content><![CDATA[<blockquote>
<p>在用WordPress仪表盘自动更新插件或WordPress版本时，有时会出现
<strong>Briefly unavailable for scheduled maintenance. Check back in a
minute.</strong> ，导致我们的WordPress站点不能正常使用</p>
</blockquote>
<figure>
<img src="http://img.ifish.ink/img/20190703103139.png" title="Briefly unavailable for scheduled maintenance. Check back in a minute." alt="Briefly unavailable for scheduled maintenance. Check back in a minute.">
<figcaption aria-hidden="true">Briefly unavailable for scheduled
maintenance. Check back in a minute.</figcaption>
</figure>
<h3 id="原因">原因：</h3>
<p>这是由于我们在更新插件的时候，由于网络不畅或者其他原因造成自动更新终端，所以访问时会出现“Briefly
unavailable for scheduled maintenance. Check back in a minute.”</p>
<span id="more"></span>
<h3 id="解决方法">解决方法：</h3>
<p>在更新插件时，WordPress会自动产生一个 <strong>.maintenance</strong>
的文本文件，所以只需要将这个文本文件 <em>删除</em> 或者 <em>置空</em>
即可</p>
<ul>
<li>用FTP或者从终端进入WordPress的根目录下，删除
<strong>.maintenance</strong> 文件</li>
<li>但是有时候我们会发现进入根目录后找不到 <strong>.maintenance</strong>
文件，所以我们可以在本地新建一个空的文本文件，将文件名更改为
<em>.maintenance</em>，然后上传到WordPress的根目录即可，这时你就会在你的WordPress看到
<strong>.maintenance</strong> 文件，然后删除即可。</li>
</ul>
<p>重新访问网站，发现一切正常<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 感谢阅读！</p>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title>WordPress站点地图自动更新</title>
    <url>/post/943451b1.html</url>
    <content><![CDATA[<blockquote>
<p>站点地图可以各个搜索引擎能够爬取到我们网站上页面。</p>
</blockquote>
<p>之前的方式是向google或者百度等搜索引擎的站长工具提交sitemap.xml或者其他静态文本文件
<img src="http://img.ifish.ink/img/baiduzhanzhang.png" alt="百度站长">
<span id="more"></span> <img src="http://img.ifish.ink/img/googlezhanzhang.png" alt="google">
现在的<strong>google-sitemap-generator</strong>插件采用非静态方式，如下图所示采用url传参的方式获取站点地图的.xml文件
<img src="http://img.ifish.ink/img/2.png" alt="google">
在百度站点或者谷歌站点配置时，只需要将此url设置好就可以了</p>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>wordpress</tag>
        <tag>SEO</tag>
        <tag>sitemap</tag>
      </tags>
  </entry>
  <entry>
    <title>git clone 速度慢？</title>
    <url>/post/ec4bf4f5.html</url>
    <content><![CDATA[<p><code>$ git clone https://xxxx</code> 克隆速度慢的解决方法：</p>
<h2 id="方法1">方法1：</h2>
<h3 id="查询ip地址">查询IP地址</h3>
<p>进入域名IP地址查看工具： <a href="https://www.ipaddress.com" title="https://www.ipaddress.com">https://www.ipaddress.com</a>
分别输入如下网址查看对应的IP地址</p>
<span id="more"></span>
<p><code>github.global.ssl.fastly.net</code> <code>github.com</code>
或者分别通过命令<code>$ nslookup github.global.ssl.fastly.Net</code>和<code>$ nslookup github.com</code>也可获得对应的IP地址</p>
<h3 id="修改hosts文件">修改hosts文件</h3>
<p>得到对应的IP后，在hosts文件后追加如下两行
Windows用户hosts文件所在路径为：<code>C:\Windows\System32\drivers\etc\hosts</code>
Linux用户：<code>sudo gedit /etc/hosts</code>
（xxx替换为你得到的对应的IP地址）</p>
<pre class="language-bash" data-language="bash"><code class="language-bash">xxx.xxx.xxx.xxx github.global-ssl.fastly.net
xxx.xxx.xxx.xxx github.com</code></pre>
<h3 id="刷新dns">刷新DNS</h3>
<p>Windows用户：<code>ipconfig /flushdns</code>
Linux用户：<code>sudo /etc/init.d/networking restart</code></p>
<h2 id="方法2">方法2：</h2>
<p>如果你使用了代理，可直接在克隆前使用如下命令</p>
<pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy <span class="token string">'sock5://127.0.0.1:1080'</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy <span class="token string">'sock5://127.0.0.1:1080'</span></code></pre>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>git</tag>
        <tag>github</tag>
        <tag>环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title>TexLive2017+TexStudio in Windows</title>
    <url>/post/c4cb1247.html</url>
    <content><![CDATA[<p>本文主要讲述了win7系统下的TexLive+TexStudio环境搭建</p>
<span id="more"></span>
<p>本文主要讲述了win7系统下的TexLive+TexStudio环境搭建，联系邮箱：
qingjun.cn@gmail.com</p>
<hr>
<p>百度云资源下载：<a href="https://pan.baidu.com/s/1PWysfuI255wz9-APFXJpag">链接：https://pan.baidu.com/s/1PWysfuI255wz9-APFXJpag
提取码：uyed</a> 清华镜像下载：<a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/">texlive下载</a>
视频源：<a href="https://www.youtube.com/watch?v=82bF7uzgFes&amp;list=PLFCWA3cnJDPVQuYFhrU0Lu9r1wogsAkdv">How
to download and Install laTex (TeXstudio+texlive2017) full</a></p>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>环境配置</tag>
        <tag>摘</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 外接显示与内置显示切换</title>
    <url>/post/83277084.html</url>
    <content><![CDATA[<ul>
<li>查看显示器设备名称
在Linux终端键入命令：<code>$ xrandx</code>，如下图所示查看对应的设备名称，本例为
LVDS-1 和 HDMI-1
(如果你的外接显示器使用VGA转接一般就是VGA-1，如果使用HDMI转接一般是HDMI-1)</li>
</ul>
<span id="more"></span>
<p><img src="http://img.ifish.ink/img/display_1.png"></p>
<ul>
<li><p>关闭外接显示器
终端键入：<code>$ xrandr --output HDMI-1 --off</code>
(其中名称VGA-1根据你自己的设备名称作相应的替换)</p></li>
<li><p>打开外接显示器，关闭内置显示器
终端键入：<code>$ xrandr --output HDMI-1 --auto --output LVDS-1 --off</code>
(其中名称HDMI-1和LVDS-1根据你自己的设备名称作相应的替换)</p></li>
<li><p>关闭外接显示器，打开内置显示器
终端键入：<code>$ xrandr --output HDMI-1 --off --output LVDS-1 --auto</code>
(其中名称HDMI-1和LVDS-1根据你自己的设备名称作相应的替换)</p></li>
</ul>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>环境配置</tag>
        <tag>ubuntu</tag>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>一直都好喜欢这首诗啊！《雨巷》--戴望舒</title>
    <url>/post/d517eeb6.html</url>
    <content><![CDATA[<blockquote>
<p>一直都好喜欢这首诗啊！《雨巷》--戴望舒</p>
</blockquote>
<span id="more"></span>
<figure>
<img src="http://img.ifish.ink/figure/xitang.png" alt="西塘">
<figcaption aria-hidden="true">西塘</figcaption>
</figure>
<hr>
<p>撑着油纸伞，独自 彷徨在悠长，悠长 又寂寥的雨巷， 我希望逢着
一个丁香一样的 结着愁怨的姑娘。 她是有 丁香一样的颜色， 丁香一样的芬芳，
丁香一样的忧愁， 在雨中哀怨， 哀怨又彷徨； 她彷徨在这寂寥的雨巷，
撑着油纸伞 像我一样， 像我一样地 默默彳亍着， 冷漠，凄清，又惆怅。
她静默地走近 走近，又投出 太息一般的眼光， 她飘过 像梦一般的，
像梦一般的凄婉迷茫。 像梦中飘过 一枝丁香的， 我身旁飘过这女郎；
她静默地远了，远了， 到了颓圮的篱墙， 走尽这雨巷。 在雨的哀曲里，
消了她的颜色， 散了她的芬芳 消散了，甚至她的 太息般的眼光，
丁香般的惆怅。 撑着油纸伞，独自 彷徨在悠长，悠长 又寂寥的雨巷，
我希望飘过 一个丁香一样的 结着愁怨的姑娘。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>三对角矩阵求逆的算法-实现</title>
    <url>/post/891db679.html</url>
    <content><![CDATA[<blockquote>
<p>本文实现的是论文《三对角矩阵求逆的算法》
论文作者：冉瑞生、黄延祝等人</p>
</blockquote>
<span id="more"></span>
<h3 id="matlab代码">MATLAB代码</h3>
<ul>
<li>函数实现</li>
</ul>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span>A<span class="token punctuation">,</span>C<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">cqj_InverseMatrixOfTridiagonalMatrices</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span>
<span class="token comment">% 本文实现的是论文《三对角矩阵求逆的算法》论文作者：冉瑞生、黄延祝等人</span>
<span class="token comment">% 本文算法的计算复杂度为O(n^2)</span>
<span class="token comment">% 应用数学和力学，第30卷，第2期 2009年2月15日出版 文章编号：1000-0887(2009)02-0238-07</span>
<span class="token comment">% Code author:Qingjun Chang  qingjun_chang@163.com &amp; qingjun.cn@gmail.com</span>
<span class="token comment">% INPUT     a：下对角线 1*(n-1)</span>
<span class="token comment">%           b：对角线 1*n</span>
<span class="token comment">%           c：上对角线 1*(n-1)</span>
<span class="token comment">% OUTPUT    A：原始三对角矩阵</span>
<span class="token comment">%           C：逆矩阵</span>
C <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">%% STEP1 input A</span>

A <span class="token operator">=</span> <span class="token function">diag</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">diag</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">diag</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span> a<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">%% STEP2 将A分解成A = LU</span>
%
<span class="token comment">% $\alpha_1=b_1$</span>
<span class="token comment">% $\tau_{i-1}=\frac{c_{i-1}}{\alpha_{i-1}},\alpha_i=b_i-a_i\tau_{i-1},$</span>
<span class="token comment">% $\gamma_i=\frac{a_i}{\alpha_{i-1}}(i=2,\cdots,n)$</span>
%
n <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">alpha</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token function">alpha</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token string">'算法2.1失败!正在尝试算法2.2...\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    syms x
    alpha <span class="token operator">=</span> x<span class="token punctuation">;</span>
    flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">:</span>n
    <span class="token function">t</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">alpha</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">alpha</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">gamma</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">alpha</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token function">alpha</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token string">'算法2.1失败!正在尝试算法2.2...\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        syms x
        alpha <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">alpha</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> x<span class="token punctuation">]</span><span class="token punctuation">;</span>
        t <span class="token operator">=</span> <span class="token punctuation">[</span>t x<span class="token punctuation">]</span><span class="token punctuation">;</span>
        gamma <span class="token operator">=</span> <span class="token punctuation">[</span>gamma x<span class="token punctuation">]</span><span class="token punctuation">;</span>
        flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>
<span class="token keyword">if</span> <span class="token function">alpha</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token string">'矩阵是奇异的!\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token comment">%% 算法2.2的一部分</span>
%
<span class="token comment">% $P(x)=\Pi_{i=1}^n\alpha_i$</span>
%
<span class="token keyword">if</span> flag
    P <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n
        P <span class="token operator">=</span> P<span class="token operator">*</span><span class="token function">alpha</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
    P <span class="token operator">=</span> <span class="token function">expand</span><span class="token punctuation">(</span>P<span class="token punctuation">)</span><span class="token punctuation">;</span>
    P_poly <span class="token operator">=</span> <span class="token function">sym2poly</span><span class="token punctuation">(</span>P<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">% 偶尔会出现错误 提示是Not a polynomial.以后修复</span>
    <span class="token keyword">if</span> <span class="token operator">~</span><span class="token function">P_poly</span><span class="token punctuation">(</span><span class="token keyword">end</span><span class="token punctuation">)</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token string">'矩阵是奇异的\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token comment">%% STEP3 计算逆矩阵的最后一个元</span>
%
<span class="token comment">% $C_{nn}=\frac{1}{\alpha_n}$</span>
%
C <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> flag
    C <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> x<span class="token punctuation">]</span><span class="token punctuation">;</span>
    C <span class="token operator">=</span> <span class="token function">reshape</span><span class="token punctuation">(</span>C<span class="token punctuation">,</span>n<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token function">C</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>n<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token function">alpha</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">%% STEP4 计算逆矩阵C的主对角线元素</span>
%
<span class="token comment">% $C_{ii}=\frac{1}{\alpha_i}+\tau_i\gamma_{i+1}C_{i+1,i+1} (i = n-1,\cdots,2,1)$</span>
%
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> n<span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span>
    <span class="token function">C</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token function">alpha</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">gamma</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>

<span class="token comment">%% STEP5 计算第i行位于主对角线元素左边的元素以及位于第i列位于主对角线上方的元素</span>
%
<span class="token comment">% $C_{ij}=-\gamma_{j+1}C_{i,j+1} (i=n,n-1,\cdots,2;j=i-1,\cdots,1)$</span>
%
<span class="token comment">% $C_{ji}=-\tau_jC_{j+1,i} (i=n,n-1,\cdots,2;j=i-1,\cdots,1)$</span>
%
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> n<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span>
    <span class="token keyword">for</span> <span class="token number">j</span> <span class="token operator">=</span> <span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span>
        <span class="token function">C</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token function">gamma</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>
<span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> n<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span>
    <span class="token keyword">for</span> <span class="token number">j</span> <span class="token operator">=</span> <span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span>
        <span class="token function">C</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token comment">%% STEP6 输出C</span>
<span class="token keyword">if</span> flag
    C <span class="token operator">=</span> <span class="token function">expand</span><span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token punctuation">;</span>
    str <span class="token operator">=</span> <span class="token string">'@(x) ['</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n
        <span class="token keyword">for</span> <span class="token number">j</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n
            temp <span class="token operator">=</span> <span class="token function">factor</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            str <span class="token operator">=</span> <span class="token punctuation">[</span>str <span class="token string">' '</span> <span class="token function">char</span><span class="token punctuation">(</span><span class="token function">prod</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span>
        str <span class="token operator">=</span> <span class="token punctuation">[</span>str <span class="token string">';'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
    str <span class="token operator">=</span> <span class="token punctuation">[</span>str <span class="token string">']'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    Cfun <span class="token operator">=</span> <span class="token function">str2func</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    C <span class="token operator">=</span> <span class="token function">Cfun</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token keyword">end</span></code></pre>
<ul>
<li>测试</li>
</ul>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">3</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>A<span class="token punctuation">,</span>C<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">cqj_InverseMatrixOfTridiagonalMatrices</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span></code></pre>
<ul>
<li>论文原文</li>
</ul>
<p><a href="/pdf/三对角矩阵求逆的算法_冉瑞生.pdf">三对角矩阵求逆的算法_冉瑞生.pdf</a></p>
<ul>
<li>文档</li>
</ul>
<p><a href="https://img.ifish.ink/pdf/Implementation_of_Tridiag_Matrix_Inversion_Algorithm.pdf">文档原文</a></p>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>数学学习</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>MATLAB代码</tag>
        <tag>算法实现</tag>
      </tags>
  </entry>
  <entry>
    <title>三对角矩阵的类雅可比迭代程序</title>
    <url>/post/f9428d51.html</url>
    <content><![CDATA[<h2 id="三对角矩阵的类雅可比迭代算法解线性方程组">三对角矩阵的类雅可比迭代算法解线性方程组</h2>
<span id="more"></span>
<ul>
<li>函数实现</li>
</ul>
<pre class="language-MATLAB" data-language="MATLAB"><code class="language-MATLAB">function [ output_args ] = cqj_QuasiJacobi(init_X,coefficient_mat,b_mat,maxNum,epsilon)
% 类雅可比迭代法 只不过对角矩阵D由三对角矩阵代替
% init_X：初始值
% coefficient_mat：系数矩阵
% b_mat：b
% maxNum：最大迭代次数
% epsilon：精度
output_args = [];
flag = 0;

%% 预处理 检查用户调用函数时参数格式是否传错
if size(coefficient_mat,1) ~= size(coefficient_mat,2)
    disp('系数矩阵格式错误(需要方阵)');
    return;
end
if size(b_mat,1) ~= 1 &amp;&amp; size(b_mat,2) ~= 1
    disp('AX=b中的b必须为行向量或者列向量');
    return;
end
if size(b_mat,1) == 1
    b_mat = b_mat';
end
if size(init_X,1) ~= 1 &amp;&amp; size(init_X,2) ~= 1
    disp('初始值必须为行向量或者列向量');
    return;
end
if size(init_X,1) == 1
    init_X = init_X';
end
if size(init_X,1) ~= size(coefficient_mat,1)
    disp('初始值与系数矩阵维数不一致');
    return;
end
if size(init_X,1) ~= size(b_mat,1)
    disp('AX=b中的b向量维数错误(需与系数矩阵的维数一致');
    return;
end
if ~exist('maxNum', 'var')
    maxNum = 500; % 默认值
end
if ~exist('epsilon', 'var')
    epsilon = 1e-14; % 默认值
end

%% 三对角线
a = diag(coefficient_mat,-1)';
b = diag(coefficient_mat)';
c = diag(coefficient_mat,1)';
D = diag(a,-1)+diag(b)+diag(c,1);

% 采用冉瑞生等人《三对角矩阵求逆的算法》中的算法
[~,D_inv] = cqj_InverseMatrixOfTridiagonalMatrices(a,b,c);
if isempty(D_inv)
    disp('系数矩阵不可逆');
    return;
end
%% 开始迭代
% 下面代码段也行 但是对内存的消耗比较大 
% x(:,0) = init_X;
% for k = 1:maxNum
%     x(:,k) = D_inv*(b_mat-(coefficient_mat-D)*x(:,k-1));
%     if norm(x(:,k)-x(:,k-1)) &lt; epsilon  % 达到精度
%         flag = 1;
%         break;
%     end
% end
x = init_X;
%%
% 迭代公式：
% $$x_{k+1}=D^{-1}(b-(L+U)x_k),k=0,1,2,\cdots$
% 
for k = 1:maxNum
    temp = D_inv*(b_mat-(coefficient_mat-D)*x);
    if norm(temp-x) &lt; epsilon
        flag = 1;
        x = temp;
        break;
    end
    x = temp;
end


%% 结果
text(0,0.95,'方程：','Color','red','FontSize',14);
str1 = '\left[\begin{array}';
% 正则表达式
str2 = @(X) regexprep(regexprep(mat2str(zeros(1,size(X,2))),...
    '[\s\[\]]',''),'0','c'); 
mat_start = @(X) [str1 '{' str2(X) '}'];
my_mat2str = @(mat) regexprep(regexprep(regexprep(mat2str(mat),...
    ' *','&amp;'),';','\\\'),'[\[\]]','');
mat_end = '\end{array}\right]';
str5 = '\times X=';
% LaTex 输出
text('Interpreter','latex', 'String',['$$'...
    mat_start(coefficient_mat),my_mat2str(coefficient_mat),mat_end,...
    str5,mat_start(b_mat),my_mat2str(b_mat),mat_end '$$'],...
    'Position',[0.1 0.7],'FontSize',10);
text(0,0.5,'三对角类雅可比迭代的结果：','Color','red','FontSize',14);
if flag == 1  %好的结果
    output_args.itrNum = k;
    output_args.result = x;
    fprintf('迭代次数：%d\n',output_args.itrNum);
%     disp(x(:,k));
    disp('解：');
    disp(x);
    text('Interpreter','latex', 'String',['$$X^*=' ...
        mat_start(x) my_mat2str(x) mat_end '$$'],...
        'Position',[0.1 0.3],'FontSize',10);
    text(0.1,0.1,['迭代次数：' num2str(output_args.itrNum)],...
    'Color','k','FontSize',10);
    return;
end
text(0.1,0.3,['迭代' num2str(maxNum) '次后未收敛'],...
    'Color','k','FontSize',10);
fprintf('迭代%d次后暂未收敛\n',maxNum);
end</code></pre>
<ul>
<li>测试程序</li>
</ul>
<pre class="language-MATLAB" data-language="MATLAB"><code class="language-MATLAB">xishu_mat = [20 8 -5 -5;7 9 -2 -10;-5 -1 9 -1;-7 1 -9 10];
b_mat = [-1 -5 2 -1];
init_X = zeros(size(b_mat));
out_QuasiJacobi = cqj_QuasiJacobi(init_X,xishu_mat,b_mat,1000);</code></pre>
<ul>
<li>文档 <a href="https://img.ifish.ink/Jacobianlike_Iterators_Tri_Matrices.pdf">三对角矩阵的类雅可比迭代程序.pdf</a></li>
</ul>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>数学学习</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>MATLAB代码</tag>
        <tag>算法实现</tag>
      </tags>
  </entry>
  <entry>
    <title>三角网格曲面参数化</title>
    <url>/post/bcf65292.html</url>
    <content><![CDATA[<blockquote>
<p>本文介绍文章 <em>Parametrization and smooth approximation of surface
triangulations</em> 中的保形参数化算法，并给出MATLAB程序
曲面参数化问题：对于给定的三角网格曲面<span class="math inline">\(\mathbf{S}\)</span>，找到一个映射<span class="math inline">\(\phi(u,v):
\mathbb{R}^2\longmapsto\mathbb{R}^3\)</span>，使得平面参数域中的点与曲面网格的点一一对应，求解参数<span class="math inline">\((u,v)\)</span>，即<span class="math inline">\(\phi^{-1}\)</span>的过程称为参数化。</p>
</blockquote>
<hr>
<h2 id="算法描述">算法描述</h2>
<p><img src="http://img.ifish.ink/20201031/1.png"></p>
<span id="more"></span>
<ol type="1">
<li><p>对于三角网格曲面<span class="math inline">\(\mathbf{S}\)</span>的每个内部点<span class="math inline">\(x_i\)</span>，寻找1领域内的邻接点，将其记为<span class="math inline">\(x_{j_1},x_{j_2},\dots,x_{j_m}\)</span>，定义<span class="math inline">\(x_i\)</span>的子图的顶点集<span class="math inline">\(X_i={x_i,x_{j_1},x_{j_2},\dots,x_{j_m}}\)</span>表示，如上图左侧所示。</p></li>
<li><p>将步骤1中的<span class="math inline">\(X_i\)</span>通过某种方式投影到平面域<span class="math inline">\(\mathbb{R}^2\)</span>中，得到平面域中的图<span class="math inline">\(P_i={p,p_1,p_2,\dots,p_m}\)</span>。上图中间</p>
<blockquote>
<p>这里的投影方式有多种选择，文章提及到最小二乘面和平均法向面，但是当曲面中三角面片之间的夹角过大时，这两种方法不具有稳定性。于是介绍了一种W-W提出的测地极坐标映射的方法。</p>
</blockquote>
<p><span class="math display">\[ r_k=\Vert p_k-p\Vert =\Vert
x_{j_k}-x_i\Vert \]</span></p></li>
</ol>
<p><span class="math display">\[ \theta_k = ang(p_k,p,p_{k+1})=2\pi
\frac{ang(x_{j_k},x_i,x_{j_{k+1}})}{\sum_kang(x_{j_k},x_i,x_{k_{k+1}})}
\]</span> 这里<span class="math inline">\(ang(a,b,c)\)</span>表示向量<span class="math inline">\(\vec {ba}\)</span>与向量<span class="math inline">\(\vec
{bc}\)</span>之间的角度。实际上上面第二个等式就是将空间角度等比例放缩到平面中，因为平面周角为<span class="math inline">\(2\pi\)</span>，所以前面需要乘<span class="math inline">\(2\pi\)</span>。定义<span class="math inline">\(p=(0,0)\)</span>，<span class="math inline">\(p_1=(\Vert x_{j_1}-x_i\Vert,0)\)</span>，这里<span class="math inline">\(p\)</span>相当于极点，<span class="math inline">\(pp_1\)</span>相当于极轴，根据极坐标<span class="math inline">\((r_k,\theta_k)\)</span>则可计算出每个<span class="math inline">\(p_k\)</span>。则得到平面域中的多边形<span class="math inline">\({p,p_1,p_2,\dots,p_m}\)</span>及其内部一点<span class="math inline">\(p\)</span></p>
<ol start="3" type="1">
<li><p>计算<span class="math inline">\(p\)</span>关于该平面多边形的广义重心坐标。这里采用均值重心坐标[<a href="https://www.mn.uio.no/math/english/people/aca/michaelf/papers/mean_value.pdf" title="Mean value coordinates">1</a>] 均值重心坐标的计算方式如下：</p>
<blockquote>
<p>c++实现均值重心坐标可参考我的另一篇文章：<a href="http://www.ifish.ink/?p=611">均值重心坐标Mean Value Coordinates In
2D代码实现</a></p>
</blockquote>
<p><img src="http://img.ifish.ink/20201031/2.jpg"></p></li>
<li><p>在第3步可计算出投影到平面域中的每个内部点关于1-ring点的广义重心坐标。
记：<span class="math inline">\(\lambda_i=[\dots,0,\dots,\lambda_{j_a},\dots,\lambda_{j_b},\dots,0,\dots]\)</span>，即只是<span class="math inline">\(x_i\)</span>的邻接点对应序号中的元素为第三步计算出的重心坐标值，其余位置为0</p></li>
<li><p>固定边界点对应的参数（如参数化到矩形域，则将网格曲面上边界点参数有序定义为矩形域的边界）
假定后<span class="math inline">\(N\)</span>个点为边界点，初始化<span class="math inline">\({(u_i,v_i)}_{i=n+1}^N\)</span></p></li>
<li><p>记<span class="math inline">\(\Lambda=[\lambda_1,\lambda_2,\dots,\lambda_n]^{\rm
T}\)</span>，求稀疏解线性方程组： <img src="http://img.ifish.ink/20201031/5.png"></p></li>
</ol>
<h2 id="matlab代码">MATLAB代码</h2>
<blockquote>
<p>下面代码仅适用于开网格 建议在桌面端浏览器或大屏移动端查看代码</p>
</blockquote>
<ul>
<li><p>首先导入模型文件：</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">,</span> close all
model_name <span class="token operator">=</span> <span class="token string">'data/bunny.obj'</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>v<span class="token punctuation">,</span>f<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">read_mesh</span><span class="token punctuation">(</span>model_name<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">% 导入模型</span></code></pre></li>
<li><p>计算边界点</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab">boundary<span class="token operator">=</span><span class="token function">compute_boundary</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">% 计算边界点，注意此时的边界是有序的</span>
<span class="token function">assert</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token function">isempty</span><span class="token punctuation">(</span>boundary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'仅适用于亏格数为0的开网格！'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
MVC <span class="token operator">=</span> <span class="token function">sparse</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">length</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li>
<li><p>对非边界点循环 计算均值重心坐标</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token function">setdiff</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span>boundary<span class="token punctuation">)</span>   <span class="token comment">% 对非边界点循环 i</span>
  <span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>indexes_of_adjacent_faces<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>f<span class="token operator">==</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">% 找到x_i的邻接面</span>
  adjacent_vertices <span class="token operator">=</span> <span class="token function">setdiff</span><span class="token punctuation">(</span><span class="token function">unique</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>indexes_of_adjacent_faces<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% x_i的邻接点</span>

  <span class="token comment">%% 对空间中的x_i的无序邻接点排序</span>
  djacent_vertices_ordered <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">length</span><span class="token punctuation">(</span>adjacent_vertices<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">djacent_vertices_ordered</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">adjacent_vertices</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% 指定一个初始的</span>
  adjacent_faces <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>indexes_of_adjacent_faces<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">% 取出邻接面</span>
  <span class="token keyword">for</span> ii <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>adjacent_vertices<span class="token punctuation">)</span>
      <span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>adjacent_faces <span class="token operator">==</span> <span class="token function">djacent_vertices_ordered</span><span class="token punctuation">(</span>ii<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        
      p <span class="token operator">=</span> <span class="token function">setdiff</span><span class="token punctuation">(</span><span class="token function">unique</span><span class="token punctuation">(</span><span class="token function">adjacent_faces</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">[</span>djacent_vertices_ordered <span class="token number">i</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">djacent_vertices_ordered</span><span class="token punctuation">(</span>ii<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">end</span>

  <span class="token comment">%% 投影到平面</span>
  adjacent_edges <span class="token operator">=</span> <span class="token function">v</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>djacent_vertices_ordered<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">repmat</span><span class="token punctuation">(</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">length</span><span class="token punctuation">(</span>adjacent_vertices<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% X_J-X_i</span>
  adjacent_edges_1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">adjacent_edges</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token function">adjacent_edges</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">% X_{J+1}-X_I</span>
  length_of_adjacent_edges <span class="token operator">=</span> <span class="token function">vecnorm</span><span class="token punctuation">(</span>adjacent_edges<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">% 空间中邻接边的长度</span>
  cos_value <span class="token operator">=</span> <span class="token function">dot</span><span class="token punctuation">(</span>adjacent_edges<span class="token punctuation">,</span>adjacent_edges_1<span class="token punctuation">)</span><span class="token operator">./</span><span class="token punctuation">...</span>
      length_of_adjacent_edges<span class="token operator">./</span><span class="token punctuation">[</span><span class="token function">length_of_adjacent_edges</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token function">length_of_adjacent_edges</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  beta <span class="token operator">=</span> <span class="token function">acos</span><span class="token punctuation">(</span>cos_value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% 空间中的角度beta</span>
  alpha <span class="token operator">=</span> beta<span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span>beta<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">% 计算对应的平面中的角度alpha</span>

  <span class="token comment">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span>
  <span class="token comment">% 计算平面多边形，实际上用MVC的话，就不再需要多边形的具体值了，</span>
  <span class="token comment">% 因为只需要角度和长度，在上步骤已经得出</span>
  theta <span class="token operator">=</span> alpha<span class="token operator">*</span><span class="token function">triu</span><span class="token punctuation">(</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>alpha<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">eye</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>alpha<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  polygon_in_plane <span class="token operator">=</span> length_of_adjacent_edges<span class="token operator">.*</span><span class="token punctuation">[</span><span class="token function">cos</span><span class="token punctuation">(</span>theta<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">sin</span><span class="token punctuation">(</span>theta<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span>


  <span class="token comment">%% 广义重心坐标：均值重心坐标</span>
  tan_value <span class="token operator">=</span> <span class="token function">tan</span><span class="token punctuation">(</span>alpha<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  MVC_i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">tan_value</span><span class="token punctuation">(</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token function">tan_value</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">+</span>tan_value<span class="token punctuation">)</span><span class="token operator">./</span><span class="token punctuation">...</span>
      length_of_adjacent_edges<span class="token punctuation">;</span>
  <span class="token function">MVC</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span>adjacent_vertices<span class="token punctuation">)</span> <span class="token operator">=</span> MVC_i<span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span>MVC_i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span></code></pre></li>
<li><p>筛选出有用的MVC</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token comment">% 只保留内部点的MVC</span>
MVC <span class="token operator">=</span> <span class="token function">MVC</span><span class="token punctuation">(</span><span class="token function">any</span><span class="token punctuation">(</span>MVC<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li>
<li><p>初始化边界点的<span class="math inline">\((u,v)\)</span>参数</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token comment">%% 指定边界点的(u,v)  </span>
<span class="token comment">% 假定考虑参数化到[0,1]X[0,1]的正方形中</span>
chord <span class="token operator">=</span> <span class="token function">vecnorm</span><span class="token punctuation">(</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">boundary</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token function">boundary</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>boundary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
chord <span class="token operator">=</span> chord<span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span>chord<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>
uv_ <span class="token operator">=</span> chord<span class="token operator">*</span><span class="token function">triu</span><span class="token punctuation">(</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>chord<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">eye</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>chord<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">uv_1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">uv_</span><span class="token punctuation">(</span>uv_ <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">&amp;</span> uv_ <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">uv_1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token function">uv_2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">uv_</span><span class="token punctuation">(</span>uv_ <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">&amp;</span> uv_ <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token function">uv_2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token function">uv_2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token operator">-</span><span class="token function">uv_1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span>
  <span class="token function">uv_2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
  <span class="token function">uv_1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token function">uv_3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token operator">-</span><span class="token function">uv_</span><span class="token punctuation">(</span>uv_ <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token operator">&amp;</span> uv_ <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">uv_3</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token number">1</span><span class="token operator">-</span><span class="token function">uv_3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token operator">-</span><span class="token function">uv_2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span>
  <span class="token function">uv_3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
  <span class="token function">uv_2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token function">uv_4</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token operator">-</span><span class="token function">uv_</span><span class="token punctuation">(</span>uv_ <span class="token operator">&lt;=</span> <span class="token number">4</span> <span class="token operator">&amp;</span> uv_ <span class="token operator">&gt;=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">uv_4</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token number">1</span><span class="token operator">-</span><span class="token function">uv_4</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token function">uv_3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span>
  <span class="token function">uv_4</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
  <span class="token function">uv_3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
uv_boundary <span class="token operator">=</span> <span class="token punctuation">[</span>uv_1 uv_2 uv_3 uv_4<span class="token punctuation">]</span><span class="token operator">'</span><span class="token punctuation">;</span></code></pre></li>
<li><p>构造最后一步中的稀疏线性系统</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token comment">%% (I-Lambda_1)*uv_int = Lambda_2*uv_boundary</span>
Lambda_1 <span class="token operator">=</span> <span class="token function">MVC</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token function">setdiff</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span>boundary<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% 构造Lambda_1</span>
Lambda_2 <span class="token operator">=</span> <span class="token function">MVC</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>boundary<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% 构造Lambda_2</span>
A <span class="token operator">=</span> <span class="token function">eye</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>Lambda_1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> Lambda_1<span class="token punctuation">;</span> <span class="token comment">% I-Lambda_1</span>
uv_Int <span class="token operator">=</span> A<span class="token operator">\</span>Lambda_2<span class="token operator">*</span>uv_boundary<span class="token punctuation">;</span>    <span class="token comment">% 解线性方程组</span>

<span class="token function">uv</span><span class="token punctuation">(</span><span class="token function">setdiff</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span>boundary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> uv_Int<span class="token punctuation">;</span>
<span class="token function">uv</span><span class="token punctuation">(</span>boundary<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span> <span class="token operator">=</span> uv_boundary<span class="token punctuation">;</span></code></pre></li>
<li><p>可视化结果</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token comment">%% 可视化结果</span>
<span class="token function">uv</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token function">plot_mesh</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>f<span class="token punctuation">)</span>
figure
<span class="token function">plot_mesh</span><span class="token punctuation">(</span>uv<span class="token punctuation">,</span>f<span class="token punctuation">)</span></code></pre></li>
</ul>
<p><img src="http://img.ifish.ink/20201031/3.png">
将绿白相见棋盘格贴图到模型表面可以直观感受参数化的好坏 <img src="http://img.ifish.ink/20201031/4.png"></p>
]]></content>
      <categories>
        <category>图形学</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>MATLAB代码</tag>
        <tag>算法实现</tag>
        <tag>参数化</tag>
        <tag>均值重心坐标</tag>
      </tags>
  </entry>
  <entry>
    <title>均值重心坐标Mean Value Coordinates In 2D代码实现</title>
    <url>/post/d033f67a.html</url>
    <content><![CDATA[<h4 id="c实现2维多边形均值重心坐标代码可能有冗余未优化代码">c++实现2维多边形均值重心坐标（代码可能有冗余，未优化代码！）：</h4>
<blockquote>
<p>关于3维中均值重心坐标的实现可参考我的另一篇博客：<a href="https://www.ifish.ink/post/4d3c170c.html" title="均值重心坐标Mean Value Coordinates In 3D代码实现">均值重心坐标Mean
Value Coordinates In 3D代码实现</a></p>
</blockquote>
<span id="more"></span>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">/*
/// @brief      mean value coordinates in 2D
/// @details    
/// @param[in]  p,postiveity
/// @return     
/// @attention  
*/</span>
VectorXd <span class="token class-name">MyPolygon</span><span class="token double-colon punctuation">::</span><span class="token function">meanValueCoordinates</span><span class="token punctuation">(</span>Vector2d <span class="token operator">&amp;</span>p<span class="token punctuation">,</span> <span class="token keyword">bool</span> <span class="token operator">&amp;</span>postiveity<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    postiveity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> numOfV <span class="token operator">=</span> <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">getNumberOfVertices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    VectorXd mvc_coor <span class="token operator">=</span> <span class="token class-name">VectorXd</span><span class="token double-colon punctuation">::</span><span class="token function">Zero</span><span class="token punctuation">(</span>numOfV<span class="token punctuation">)</span><span class="token punctuation">;</span>
    VectorXd tanalpha <span class="token operator">=</span> <span class="token class-name">VectorXd</span><span class="token double-colon punctuation">::</span><span class="token function">Zero</span><span class="token punctuation">(</span>numOfV<span class="token punctuation">)</span><span class="token punctuation">;</span>
    MatrixXd temp <span class="token operator">=</span> <span class="token class-name">MatrixXd</span><span class="token double-colon punctuation">::</span><span class="token function">Zero</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> numOfV<span class="token punctuation">)</span><span class="token punctuation">;</span>
    MatrixXd unit_v <span class="token operator">=</span> <span class="token class-name">MatrixXd</span><span class="token double-colon punctuation">::</span><span class="token function">Zero</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> numOfV<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numOfV<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        temp<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token operator">-&gt;</span>vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> p<span class="token punctuation">;</span>
        unit_v<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numOfV<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//Vector3d cor = Vector3d(unit_v(0, i), unit_v(1, i), 0).cross(Vector3d(unit_v(0, (i + 1) % numOfV), unit_v(1, (i + 1) % numOfV), 0));</span>
        <span class="token comment">//tanalpha[i] = (1 - unit_v.col(i).dot(unit_v.col((i + 1) % numOfV))) / (cor.norm())*(2 * (cor.dot(Vector3d(0, 0, 1)) &lt; 0) - 1);</span>
        tanalpha<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token function">unit_v</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> numOfV<span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">unit_v</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">unit_v</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> numOfV<span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">unit_v</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token function">unit_v</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> numOfV<span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">unit_v</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">unit_v</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">unit_v</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> numOfV<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numOfV<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        mvc_coor<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>tanalpha<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> tanalpha<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">+</span> numOfV<span class="token punctuation">)</span> <span class="token operator">%</span> numOfV<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> temp<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    mvc_coor <span class="token operator">/=</span> mvc_coor<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    postiveity <span class="token operator">=</span> mvc_coor<span class="token punctuation">.</span><span class="token function">minCoeff</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> mvc_coor <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">return</span> mvc_coor<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>图形学</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>算法实现</tag>
        <tag>C++代码</tag>
      </tags>
  </entry>
  <entry>
    <title>均值重心坐标Mean Value Coordinates In 3D代码实现</title>
    <url>/post/4d3c170c.html</url>
    <content><![CDATA[<h4 id="c实现">c++实现：</h4>
<blockquote>
<p>关于2维中均值重心坐标的实现可参考我的另一篇博客：<a href="https://www.ifish.ink/post/d033f67a.html" title="均值重心坐标Mean Value Coordinates In 2D代码实现">均值重心坐标Mean
Value Coordinates In 2D代码实现</a></p>
</blockquote>
<span id="more"></span>
<pre class="language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">/*
/// @brief      mean value coordinates in 3D
/// @details    
/// @param[in]  p: 
/// @return     
/// @attention  
*/</span> 
VectorXd <span class="token class-name">MyMesh</span><span class="token double-colon punctuation">::</span><span class="token function">meanValueCoordinates</span><span class="token punctuation">(</span>Vector3d p<span class="token punctuation">,</span> <span class="token keyword">bool</span> <span class="token operator">&amp;</span>postiveity<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    postiveity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">//this-&gt;faces = this-&gt;fixMesh().faces;   // repair the faces index, so that the all normal vector of faces outward (inward)</span>
    VectorXd mvc_coor <span class="token operator">=</span> <span class="token class-name">VectorXd</span><span class="token double-colon punctuation">::</span><span class="token function">Zero</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">-&gt;</span>numberOfVertices<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// get projection vertices on unit sphere</span>
    Matrix<span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>Dynamic<span class="token operator">&gt;</span> pro_vertices<span class="token punctuation">;</span>

    pro_vertices<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token operator">-&gt;</span>numberOfVertices<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token operator">-&gt;</span>numberOfVertices<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">double</span> r <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">-&gt;</span>vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">pro_vertices</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">vertices</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> r<span class="token punctuation">;</span>
        <span class="token function">pro_vertices</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">vertices</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> r<span class="token punctuation">;</span>
        <span class="token function">pro_vertices</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">vertices</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> r<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    Matrix<span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">&gt;</span> T<span class="token punctuation">;</span>
    Vector3d n0<span class="token punctuation">,</span> n1<span class="token punctuation">,</span> n2<span class="token punctuation">;</span>
    <span class="token keyword">double</span> beta0<span class="token punctuation">,</span> beta1<span class="token punctuation">,</span> beta2<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token operator">-&gt;</span>numberOfFaces<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> i0<span class="token punctuation">,</span> i1<span class="token punctuation">,</span> i2<span class="token punctuation">;</span>     <span class="token comment">// index of vertices on the current face</span>
        i0 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">faces</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        i1 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">faces</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        i2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">faces</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>

        T<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i0<span class="token punctuation">)</span><span class="token punctuation">;</span>
        T<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        T<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        n0 <span class="token operator">=</span> pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i0<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cross</span><span class="token punctuation">(</span>pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        n1 <span class="token operator">=</span> pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cross</span><span class="token punctuation">(</span>pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        n2 <span class="token operator">=</span> pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cross</span><span class="token punctuation">(</span>pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// angle</span>
        beta0 <span class="token operator">=</span> <span class="token function">acos</span><span class="token punctuation">(</span>pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i0<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        beta1 <span class="token operator">=</span> <span class="token function">acos</span><span class="token punctuation">(</span>pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        beta2 <span class="token operator">=</span> <span class="token function">acos</span><span class="token punctuation">(</span>pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        mvc_coor<span class="token punctuation">[</span>i0<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token punctuation">(</span>beta1 <span class="token operator">+</span> beta0<span class="token operator">*</span>n0<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span> <span class="token operator">+</span> beta2<span class="token operator">*</span>n2<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i0<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mvc_coor<span class="token punctuation">[</span>i1<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token punctuation">(</span>beta2 <span class="token operator">+</span> beta1<span class="token operator">*</span>n1<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>n2<span class="token punctuation">)</span> <span class="token operator">+</span> beta0<span class="token operator">*</span>n0<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>n2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>n2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mvc_coor<span class="token punctuation">[</span>i2<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token punctuation">(</span>beta0 <span class="token operator">+</span> beta2<span class="token operator">*</span>n2<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>n0<span class="token punctuation">)</span> <span class="token operator">+</span> beta1<span class="token operator">*</span>n1<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>n0<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> pro_vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>n0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token operator">-&gt;</span>numberOfVertices<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        mvc_coor<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">/=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">-&gt;</span>vertices<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    mvc_coor <span class="token operator">/=</span> mvc_coor<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    postiveity <span class="token operator">=</span> mvc_coor<span class="token punctuation">.</span><span class="token function">minCoeff</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> mvc_coor<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>图形学</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>算法实现</tag>
        <tag>C++代码</tag>
      </tags>
  </entry>
  <entry>
    <title>多维放缩MDS算法</title>
    <url>/post/94abe0b4.html</url>
    <content><![CDATA[<blockquote>
<p>在线性代数中我们接触到embedding(嵌入)这一术语，表示从高维到低维空间。考虑一个高维空间中的样本集在低维空间中的形态。
“embedding”也应用在计算机图形学的参数化领域中。</p>
</blockquote>
<h3 id="问题">问题</h3>
<p>给定高维空间<span class="math inline">\(\mathbb{R}^n\)</span>中的<span class="math inline">\(m\)</span>个样本点为<span class="math inline">\(\{X_i\}_{i=1}^m\)</span>，考虑是否可以将<span class="math inline">\(m\)</span>个样本嵌入到低维空间<span class="math inline">\(\mathbb{R}^{d}\)</span>，<span class="math inline">\(d&lt;
n\)</span>，使得高维空间中两样本点的度量距离在低维空间中保持不变。</p>
<figure>
<img src="http://img.ifish.ink/2020/1110_1.png?imageMogr2/auto-orient/thumbnail/1000x1000" alt="embedding">
<figcaption aria-hidden="true">embedding</figcaption>
</figure>
<span id="more"></span>
<h3 id="分析">分析</h3>
<p>设高维空间中样本点<span class="math inline">\({
X}_i\)</span>在低维空间中表示为<span class="math inline">\({
Z}_i\)</span>，要保证度量距离不变，即： <span class="math display">\[
\Vert {X}_i-{ X}_j\Vert=\Vert { Z}_i-{ Z}_j\Vert\qquad i,j=1,2,\dots,m
\label{eq1}
\]</span> 将上式平方得到： <span class="math display">\[
\Vert {X}_i-{ X}_j\Vert^2=\Vert { Z}_i\Vert^2+\Vert { Z}_j\Vert^2-2{
Z}_i^{ T}{ Z}_j
\label{eq2}
\]</span> 令<span class="math inline">\({ B}={ Z}^{ T}{
Z}\in\mathbb{R}^{m\times
m}\)</span>表示低维空间中样本的内积矩阵，内积矩阵第<span class="math inline">\(i\)</span>行第<span class="math inline">\(j\)</span>列元素为<span class="math inline">\(B_{i,j}=Z_i^{\rm T}Z_j\)</span>，用<span class="math inline">\(D\)</span>表示样本在原始空间中的距离矩阵，其中<span class="math inline">\(D_{i,j}=\Vert X_i-X_j\Vert\)</span>， <span class="math display">\[
D_{i,j}^2=B_{i,i}+B_{j,j}-2B_{i,j}
\label{eq3}
\]</span> 如果得到满足上式约束的矩阵<span class="math inline">\({
B}\)</span>，假定<span class="math inline">\({ B}\)</span>含有<span class="math inline">\(k\)</span>个非零特征值，分别为<span class="math inline">\(\lambda_1,\lambda_2,\dots,\lambda_k\)</span>且满足<span class="math inline">\(\lambda_i\ge\lambda_j,i&lt; j\)</span>，则有<span class="math inline">\({ B}={ V\Lambda V^T}\)</span>，其中<span class="math inline">\({
\Lambda}=diag\{\lambda_1,\lambda_2,\dots,\lambda_k\}\)</span>，<span class="math inline">\({ V}\)</span>的第<span class="math inline">\(i\)</span>列是特征值<span class="math inline">\(\lambda_i\)</span>对应的特征向量。则有<span class="math inline">\({ Z}={ \Lambda}^{\frac{1}{2}}{ V}^{
T}\in\mathbb{R}^{k\times m}\)</span>，如果<span class="math inline">\(k&lt;
n\)</span>，则实现距离不变的降维。下面考虑如何求解满足上式约束的内积矩阵。</p>
<h3 id="内积矩阵的推导">内积矩阵的推导</h3>
<p>考虑低维样本的中心为原点，即<span class="math inline">\(\sum_iZ_i=0\)</span>，根据第二等式有： <span class="math display">\[
\sum_iD_{i,j}^2=\sum_iB_{i,i}+mB_{j,j}
\]</span></p>
<p><span class="math display">\[
\sum_{i,j}D_{i,j}^2 =2m\sum_iB_{i,i}
\]</span></p>
<p>有：<br>
<span class="math display">\[
B_{j,j}=\frac{\sum_iD_{i,j}^2}{m}-\frac{\sum_{i,j}D_{i,j}^2}{2m^2}
\]</span> 代入公式有： <span class="math display">\[
B_{i,j} =
-\frac{1}{2}(D_{i,j}^2-\frac{\sum_jD_{i,j}^2}{m}+\frac{\sum_{i,j}D_{i,j}^2}{m^2}-\frac{\sum_iD_{i,j}^2}{m})
\]</span> 由此则可得到内积矩阵。</p>
<h3 id="距离不必严格相等的嵌入">距离不必严格相等的嵌入</h3>
<p>特别地，在现实应用为了降低维度，多数情况下会损失一部分信息。即，如果目标空间维度<span class="math inline">\(d\)</span>小于非零特征值的个数，则做不到距离严格相等。此时取<span class="math inline">\({
\Lambda_*}=diag\{\lambda_1,\lambda_2,\dots,\lambda_d\}\)</span>，对应的特征向量矩阵为<span class="math inline">\(V_*\)</span>。即<span class="math inline">\(B\approx{
V_*\Lambda_*V^T_*}\)</span>。低维空间中的样本可表示为 <span class="math display">\[
Z=\Lambda_*^{\frac{1}{2}}V^T_*\in\mathbb{R}^{d\times m}
\]</span></p>
<h3 id="简单应用mathbbr3longmapstomathbbr2">简单应用<span class="math inline">\(\mathbb{R}^3\longmapsto\mathbb{R}^2\)</span></h3>
<figure>
<img src="http://img.ifish.ink/2020/1110_2.png" alt="embedding">
<figcaption aria-hidden="true">embedding</figcaption>
</figure>
]]></content>
      <categories>
        <category>数学学习</category>
        <category>算法</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>标准雅可比迭代算法-实现</title>
    <url>/post/5d0495ae.html</url>
    <content><![CDATA[<h3 id="标准雅可比迭代算法解线性方程组-算法实现">标准雅可比迭代算法解线性方程组-算法实现</h3>
<span id="more"></span>
<ul>
<li>函数实现</li>
</ul>
<pre class="language-MATLAB" data-language="MATLAB"><code class="language-MATLAB">function [ output_args ] = cqj_Jacobi(init_X,coefficient_mat,b_mat,maxNum,epsilon)
% 雅可比迭代法
% init_X：初始值
% coefficient_mat：系数矩阵
% b_mat：b
% maxNum：最大迭代次数
% epsilon：精度
output_args = [];
flag = 0;
%% 预处理 检查用户调用函数时参数格式是否传错
if size(coefficient_mat,1) ~= size(coefficient_mat,2)
    disp('系数矩阵格式错误(需要方阵)');
    return;
end
if size(b_mat,1) ~= 1 &amp;&amp; size(b_mat,2) ~= 1
    disp('AX=b中的b必须为行向量或者列向量');
    return;
end
if size(b_mat,1) == 1
    b_mat = b_mat';
end
if size(init_X,1) ~= 1 &amp;&amp; size(init_X,2) ~= 1
    disp('初始值必须为行向量或者列向量');
    return;
end
if size(init_X,1) == 1
    init_X = init_X';
end
if size(init_X,1) ~= size(coefficient_mat,1)
    disp('初始值与系数矩阵维数不一致');
    return;
end
if size(init_X,1) ~= size(b_mat,1)
    disp('AX=b中的b向量维数错误(需与系数矩阵的维数一致');
    return;
end
if ~exist('maxNum', 'var')
    maxNum = 500; % 默认值
end
if ~exist('epsilon', 'var')
    epsilon = 1e-14; % 默认值
end
%% 对角线
D = diag(diag(coefficient_mat));
% 可能matlab的源码inv函数对角函数求逆会像普通函数一样处理，
% 这种特殊函数求逆会比较快
D_inv = diag(1./diag(coefficient_mat));
%% 开始迭代
% 下面代码段也行 但是对内存的消耗比较大 
% x(:,0) = init_X;
% for k = 1:maxNum
%     x(:,k) = D_inv*(b_mat-(coefficient_mat-D)*x(:,k-1));
%     if norm(x(:,k)-x(:,k-1)) &lt; epsilon  % 达到精度
%         flag = 1;
%         break;
%     end
% end
x = init_X;
%%
% 迭代公式：
% $$x_{k+1}=D^{-1}(b-(L+U)x_k),k=0,1,2,\cdots$
% 
for k = 1:maxNum
    temp = D_inv*(b_mat-(coefficient_mat-D)*x);
    if norm(temp-x) &lt; epsilon
        flag = 1;
        x = temp;
        break;
    end
    x = temp;
end
%% 结果
text(0,0.95,'方程：','Color','red','FontSize',14);
str1 = '\left[\begin{array}';
% 正则表达式
str2 = @(X) regexprep(regexprep(mat2str(zeros(1,size(X,2))),...
    '[\s\[\]]',''),'0','c'); 
mat_start = @(X) [str1 '{' str2(X) '}'];
my_mat2str = @(mat) regexprep(regexprep(regexprep(mat2str(mat),...
    ' *','&amp;'),';','\\\'),'[\[\]]','');
mat_end = '\end{array}\right]';
str5 = '\times X=';
% LaTex 输出
text('Interpreter','latex', 'String',['$$'...
    mat_start(coefficient_mat),my_mat2str(coefficient_mat),mat_end,...
    str5,mat_start(b_mat),my_mat2str(b_mat),mat_end '$$'],...
    'Position',[0.1 0.7],'FontSize',10);
text(0,0.5,'标准雅可比迭代结果：','Color','red','FontSize',14);
if flag == 1  %好的结果
    output_args.itrNum = k;
    output_args.result = x;
    fprintf('迭代次数：%d\n',output_args.itrNum);
%     disp(x(:,k));
    disp('解：');
    disp(x);
    text('Interpreter','latex', 'String',['$$X^*=' ...
        mat_start(x) my_mat2str(x) mat_end '$$'],...
        'Position',[0.1 0.3],'FontSize',10);
    text(0.1,0.1,['迭代次数：' num2str(output_args.itrNum)],...
    'Color','k','FontSize',10);
    return;
end
text(0.1,0.3,['迭代' num2str(maxNum) '次后未收敛'],...
    'Color','k','FontSize',10);
fprintf('迭代%d次后暂未收敛\n',maxNum);
end</code></pre>
<ul>
<li>测试代码</li>
</ul>
<pre class="language-MATLAB" data-language="MATLAB"><code class="language-MATLAB">xishu_mat = [20 8 -5 -5;7 9 -2 -10;-5 -1 9 -1;-7 1 -9 10];
b_mat = [-1 -5 2 -1];
init_X = zeros(size(b_mat));
out_Jacobi = cqj_Jacobi(init_X,xishu_mat,b_mat,1000);</code></pre>
<ul>
<li>文档 <a href="https://img.ifish.ink/Standard_Jacobian_Iterative_Algorithm_Procedure.pdf">文档原文</a></li>
</ul>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>数学学习</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>MATLAB代码</tag>
        <tag>算法实现</tag>
      </tags>
  </entry>
  <entry>
    <title>爱奇艺非会员去视频广告：uBlock Origin插件</title>
    <url>/post/6248da0d.html</url>
    <content><![CDATA[<blockquote>
<p>相信大家在浏览网页时，都有被各种各样的站内广告所打扰的经历。今天小编给大家分享一款评分很高的去广告插件
uBlock Origin</p>
</blockquote>
<h3 id="小编使用ublock-origin插件已经一年多时间了在这之前用过各种各样的去广告插件但唯独这一款插件用得最舒服也是使用时间最长的一款去广告插件">小编使用uBlock
Origin插件已经一年多时间了，在这之前用过各种各样的去广告插件，但唯独这一款插件用得最舒服，也是使用时间最长的一款去广告插件</h3>
<span id="more"></span>
<h3 id="一ublock-origin简介">一、uBlock Origin简介</h3>
<p><img src="http://img.ifish.ink/img/uo.png" alt="uBlock Origin Logo"> uBlock
Origin是一款自由、开源、跨平台的内容过滤浏览器扩展，包含广告屏蔽功能。此扩展可在多款浏览器上使用，包括Safari、Chrome、Edge、Firefox和Opera及相关的兼容浏览器。<a href="https://zh.wikipedia.org/wiki/UBlock_Origin" title="https://zh.wikipedia.org/wiki/UBlock_Origin">[1]</a> uBlock
Origin已获得多家技术网站的赞誉，其内存占用比其他同样功能的扩展更少。uBlock
Origin的目标是为用户提供自行实施内容过滤的选择。<a href="https://zh.wikipedia.org/wiki/UBlock_Origin" title="https://zh.wikipedia.org/wiki/UBlock_Origin">[1]</a>
截至2016年，uBlock Origin继续由其创始人和主要开发者Raymond
Hill积极开发和维护。Hill已撤出对该软件的旧分支“uBlock”的支持，援引“严重违背本项目的精神”。从外表看，旧的分支也已不再被维护。<a href="https://zh.wikipedia.org/wiki/UBlock_Origin" title="https://zh.wikipedia.org/wiki/UBlock_Origin">[1]</a></p>
<hr>
<h3 id="二chrome下安装ublock-origin插件">二、Chrome下安装uBlock
Origin插件</h3>
<p><em>小编仅仅在Chrome下测试过，其他浏览器下未测试</em></p>
<h4 id="直接从google-store安装插件">直接从Google Store安装插件</h4>
<blockquote>
<p>（由于一些众所周知的原因，国内用户可能不能直接使用google服务，所以不能访问google
store的同学请跳过本节，用下面讲的第二种方法“<strong>从本地导入.crx文件</strong>”）</p>
</blockquote>
<ol type="1">
<li><a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm?hl=zh-CN">点击</a>进入Chrome网上应用商店，点击右侧“<strong>添加至Chrome</strong>”，选择“<strong>添加扩展程序</strong>”
<img src="http://img.ifish.ink/img/uo5.png"> <img src="http://img.ifish.ink/img/uo2.png"></li>
</ol>
<h4 id="从本地导入.crx文件">从本地导入.crx文件</h4>
<ol type="1">
<li><p>从百度云盘<a href="https://pan.baidu.com/s/1kqHWjTgz2bY8WD00uniqWQ">下载</a> uBlock
Origin 1.19.6_0.crx文件 提取码：tqwe</p></li>
<li><p>进入Chrome的扩展程序页：在Chrome地址栏中键入<a href="chrome://extensions/">chrome://extensions/</a>
后回车，可以看到类似下图页面 <img src="http://img.ifish.ink/img/1.png" alt="chrome://extensions"></p></li>
<li><p>将第1步中下载的<a href="https://pan.baidu.com/s/1kqHWjTgz2bY8WD00uniqWQ">uBlockOrigin1.19.6_0.crx</a>文件拖动到<a href="chrome://extensions/">Chrome扩展页</a>，点击“<strong>添加扩展程序</strong>”即可
<img src="http://img.ifish.ink/img/uo2.png"> <img src="http://img.ifish.ink/img/uo3.png"></p></li>
<li><p>在Chrome右上角点击uBlock
Origin的图标，选择启动插件，大功告成。可以根据自己的需要设置一些广告拦截规则。
<img src="http://img.ifish.ink/img/uo4.png"></p></li>
</ol>
<hr>
<h3 id="三测试">三、测试</h3>
<ul>
<li><p>未启用uBlock
Origin插件时，用<strong>百度</strong>搜索引擎搜索关键词“前端开发”的页面
(可以看到靠前的内容几乎都是广告) <img src="http://img.ifish.ink/img/uo6.png"></p></li>
<li><p>启用uBlock
Origin插件后，用<strong>百度</strong>搜索引擎搜索关键词“前端开发”的页面
(广告明显减少) <img src="http://img.ifish.ink/img/uo7.png"></p></li>
<li><p>测试爱奇艺视频 (请注意下面gif图中广告时间的变化) <img src="http://img.ifish.ink/img/uo.gif"></p></li>
</ul>
<hr>
<h3 id="四参考">四、参考：</h3>
<p><a href="https://zh.wikipedia.org/wiki/UBlock_Origin" title="https://zh.wikipedia.org/wiki/UBlock_Origin">1</a>.
维基百科：https://zh.wikipedia.org/wiki/UBlock_Origin</p>
<hr>
<p><strong>如有任何疑问或建议欢迎下方留言 :-)</strong></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>神器</tag>
      </tags>
  </entry>
  <entry>
    <title>瑞士意大利语区大学访学记录</title>
    <url>/post/f29efa2.html</url>
    <content><![CDATA[<blockquote>
<p>瑞士位于欧洲中部，与德国、意大利、法国接壤，属于内陆国。瑞士是全球最富裕、经济最发达的国家之一。瑞士人民拥有较高的生活水准。瑞士旅游资源丰富，有世界公园的美誉。
第一次写这种游记，主要是想介绍一下我此次欧洲之行的感受。</p>
</blockquote>
<figure>
<img src="http://img.ifish.ink/img/Switzerland.jpg" alt="瑞士">
<figcaption aria-hidden="true">瑞士</figcaption>
</figure>
<span id="more"></span>
<hr>
<h3 id="访学契机">访学契机</h3>
<p>我是来自杭州电子科技大学的硕士研究生，在2019年夏季，我有幸受到Kai
Hormann教授的邀请去往瑞士意大利语区大学交流。由于在2018年我与Kai
Hormann在杭州有过一次短暂的相处，所以少了一些陌生。访问交流的时间定在2019年9月中旬至2019年12月中旬。</p>
<hr>
<h3 id="签证篇">签证篇</h3>
<p>在确定好了访问时间后，已经是7月下旬了，由于时间非常紧迫，所以马上着手准备办理签证所需的各种材料。我的目的地是瑞士，瑞士不属于欧盟成员国，但是属于申根签证国，我办理的是C类短期申根签证。所需的材料如下：</p>
<p>学校所需材料</p>
<ul>
<li>国外院校邀请函</li>
<li>访学申请表</li>
<li>家长担保函 （需公证）</li>
</ul>
<p>签证所需材料</p>
<ul>
<li>申根签证申请表 （原件）</li>
<li>护照原件及复印件</li>
<li>照片 （尺寸颜色要求需到签证中心官网查看）</li>
<li>医疗保险</li>
<li>邀请函 （原件 + 翻译件）</li>
<li>解释信</li>
<li>外交部认证的亲属关系公证书</li>
<li>经济依附人银行3个月流水记录</li>
<li>学校出具在读证明 （原件 + 翻译件）</li>
</ul>
<p>因为 <strong>外交部认证的亲属关系公证书</strong>
办理的路子有点麻烦，我在某宝找了代理帮办，其他我都是自己办理的，当我把所有材料都准备好的时候已经8月底了，之前在网上查询了一下都说签证基本上需要15个工作日左右，由于我提前买好了9月14日出发的机票，所以时间还是很紧迫的，结果瑞士驻上海领事馆的办事效率还是非常不错的，我周五去递签的，没想到周二就收到签证了。
<img src="http://img.ifish.ink/img/visa.png" alt="签证"></p>
<hr>
<h3 id="行程篇">行程篇</h3>
<p>接来下便是准备行李等方面的事情了……</p>
<ul>
<li>由于是国际长途，航班对行李的携带有着严格的规定。常见物品托运规定可参考下图：
<img src="http://img.ifish.ink/img/tuoyun.jpg" alt="托运指南"></li>
<li>如果是短途旅行可以提前在网上购买一张旅行用的手机卡，主要是使用4G上网功能。在某宝上可以找到一大堆这样的卡，根据自己需要，这里就不介绍了，需要注意的是购买一定要看清楚此卡在目的国家是否可用。价格方面可以参照下图：
<img src="http://img.ifish.ink/img/sim.png" alt="手机卡购买"></li>
</ul>
<h4 id="出发-go">出发 Go:</h4>
<p>由于瑞士意大利语区大学在瑞士南部提挈诺州(Ticino)的卢加诺(Lugano)小城，我的行程路线是：杭州→上海→法兰克福→苏黎世→卢加诺。在一切准备就绪后，我于北京时间2019年9月14日登上了从上海浦东机场飞往德国法兰克福机场的航班，开启了长达十几个小时的空中之旅。
<img src="http://img.ifish.ink/img/shangtofa.jpg" alt="机票"> <img src="http://img.ifish.ink/img/fatosu.jpg" alt="机票">
大型波音客机体验非常确实不错，客机系统能让我随时了解到我当前处于什么位置。
当地时间次日早晨抵达法兰克福机场后，由于中转时间短，没有多余的时间和精力记录法兰克福国际机场的场景，紧张的换乘让人特别疲惫。
<img src="http://img.ifish.ink/img/fa_airport.jpg" alt="法兰克福机场">
搭乘从德国法兰克福到瑞士苏黎世的航班，上午准时降落在苏黎世国际机场，然后乘坐号称全球准点率最高的瑞铁（SBB）前往终点卢加诺Lugano.
<img src="http://img.ifish.ink/img/lugano1.jpg" alt="卢加诺火车站外">
当我到达卢加诺火车站时，Kai
Hormann教授带我去往他的家里，并同他的家人们共享西式午餐（P.S.
感觉教授非常热心肠，非常好，异国他乡真的超感动） <img src="http://img.ifish.ink/img/home_kai.jpg" alt="教授家"></p>
<hr>
<h3 id="学习篇">学习篇</h3>
<blockquote>
<p>接下来便是三个月的异国生活，当然我的主要任务是为学习来的，所以还是要以学习为主，哈哈。学习之余便是旅游了……</p>
</blockquote>
<p>瑞士意大利语区大学位于瑞士南部提挈诺州，是瑞士十二所公立大学之一，也是瑞士意大利语区唯一的一所公立大学。
瑞士意大利语区大学主要以意大利语和英语交流为主，在学校校园及实验室跟老师同学沟通都是英语，所以可以很好地锻炼口语表达能力。由于卢加诺属于意大利语区，官方语言为意大利语，市民之间的交流以及公共设施多以意大利语为主，这一点对我来说有点不太方便。
<img src="http://img.ifish.ink/img/usi_lib.jpg" alt="USI图书馆">
我本次到达卢加诺的目的是在Kai
Hormann教授的指导下进行广义重心坐标相关的研究工作。在Hormann教授的指导下，我学习到了许多新的工作模式和工作技能。同时，Hormann教授也鼓励我趁这次访学的机会，在周末多出去逛逛，感受欧洲风情。与我一同相处的是三个研究计算几何的博士学生：Dr.
Martin Suderland(德国), Dr. Kolja Junginger(德国)与Dr. Ioannis
Mantas(希腊)，我们平时相处非常融洽，在平时的相处中我们讨论中西方文化差异，向他们讲述中国的传统文化，以及近几年的发展情况。在平常的学习之余，我们会聚餐放松，开车到瑞士的山中去感受当地特色食物，享受生活。(下图食物人均35CHF也是非常贵了<span class="github-emoji"><span>😅</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>)
<img src="http://img.ifish.ink/img/food.png" alt="特色食物">
在学习研究方面，我与Kai每周会针对我们的研究问题进行3-4次大的讨论，我们一起优化每一行代码，这种工作模式与国内师生的工作方式大不相同，让我印象深刻，我也很喜欢这样的工作模式。Kai指导我使用OpenGL库进行GPU编程，在他的指导下我熟悉了OpenGL渲染语言GLSL。
<img src="http://img.ifish.ink/img/work1.jpg" alt="讨论"> <img src="http://img.ifish.ink/img/work2.jpg" alt="讨论"> <img src="http://img.ifish.ink/img/work-ic.png" alt="成果"></p>
<blockquote>
<p>很幸运我们的研究成果"<a href="https://www.sciencedirect.com/science/article/abs/pii/S0167839620300480">Iterative
Coordinates</a>"被国际会议"The 14th International Conference on
Geometric Modeling and Processing GMP 2020"录用，已被推荐至期刊 Computer
Aided Geometric Design 出版。</p>
</blockquote>
<hr>
<h3 id="卢塞恩-luzern">卢塞恩 Luzern</h3>
<p><img src="http://img.ifish.ink/img/Luzern.jpg">
瑞士卢塞恩(琉森)最负盛名便是卡佩尔廊桥Chapel
Bridge（Kapellbrücke）又叫教堂桥，这是卢塞恩的标志，始建于1333年，也是欧洲最古老的有顶木桥，桥的横眉上绘有120幅宗教历史油画，沿途还可欣赏描述当年黑死病流行景象的画作。<a href="https://baike.baidu.com/item/%E5%8D%A1%E4%BD%A9%E5%B0%94%E6%A1%A5/9494568?fromtitle=%E5%8D%A1%E8%B4%9D%E5%B0%94%E6%A1%A5&amp;fromid=1847616" title="卡佩尔桥">[1]</a> <img src="http://img.ifish.ink/img/Luzern1.jpg">
卢塞恩地标建筑卡佩尔桥湖两岸非常多的餐厅，是瑞士难得一见比较热闹的地方。我到卢塞恩的时候赶上了好天气，中午湖里有人“赛龙舟”，在湖边的欧式餐厅很悠闲的吃吃饭，然后在岸边的石台阶上坐着欣赏“赛龙舟”，还时不时有喇叭里传出的欧洲音乐，非常惬意。(下图食物总价85CHF+5CHF小费<span class="github-emoji"><span>😅</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>)
<img src="http://img.ifish.ink/img/Luzern_food.jpg"></p>
<hr>
<h3 id="阿尔卑斯山脉美丽的少女峰-jungfrau-alps">阿尔卑斯山脉美丽的少女峰
Jungfrau Alps</h3>
<p><img src="http://img.ifish.ink/img/apls_quanjing.jpg">
由于之前看过一部非常喜欢的治愈系电影：<a href="https://movie.douban.com/subject/25958717/" title="海蒂和爷爷 Heidi">海蒂和爷爷 Heidi</a>
特别喜欢电影中的画面，后来了解电影拍摄地有瑞士阿尔卑斯山脉。
<strong>安利一下:</strong>
9月底，我来到了阿尔卑斯山脉著名的少女峰，少女峰一直以冰雪与山峰、阳光与浮云吸引着八方游客。我乘坐齿轨火车到达少女峰火车站，少女峰齿轨火车，又叫云霄火车，因为它最终抵达的地方位居海拔3454米的少女峰站是全欧洲海拔最高的火车站，有“Top
op Europe欧洲之巅”之称。关于少女峰齿轨铁路的建设可从<a href="https://www.jungfrau.ch/zh-cn/jungfraujoch-top-of-europe/%E5%B0%91%E5%A5%B3%E5%B3%B0%E9%93%81%E8%B7%AF%E5%BB%BA%E8%AE%BE/">这里</a>获得更多信息。
<img src="http://img.ifish.ink/img/chigui_pass.jpg"> <img src="http://img.ifish.ink/img/jing.jpg"> <img src="http://img.ifish.ink/img/jing1.jpg"> <img src="http://img.ifish.ink/img/aerbeisishaonvfeng.jpg"></p>
<hr>
<h3 id="米兰milano">米兰Milano</h3>
<p><img src="http://img.ifish.ink/img/duomo.jpg" alt="米兰大教堂">
以前对于米兰的认识基本都是很肤浅的认识，仅仅从一些词条有所了解，比如：国际米兰队、AC米兰、米兰时装秀等。但是当我亲历这座国际知名的城市后，发现米兰的确有它的文化底蕴，历史悠久，1805年拿破仑加冕仪式就在上图的米兰大教堂举行。
<img src="http://img.ifish.ink/img/milano_npl.jpg" alt="雕塑">
米兰主教大教堂(Duomo &amp; Piazza del
Duomo)于1386年开工建造，1500年完成拱顶，1774年最高的哥特式塔尖上的La
Madonnina(镀金圣母玛丽亚雕像)由Giuseppe
Perego建造，是米兰市的象征。整个教堂1965年完工，历时五个世纪。雄伟壮观的哥德式建筑，为世界第二大教堂，世界上最大的哥特式建筑。纷繁复杂的塔尖，独特华丽的设计，正是米兰时尚精神的源泉。这座教堂曾举行过拿破仑的加冕礼，也让达芬奇为其苦思冥想，拥有者无比的力量。更有甚者，为了这座教堂，达芬奇还发明了电梯。如今，这座教堂已经不仅仅是宗教精神的象徵，更是时尚的象徵，独特的象徵，意大利的象徵。<a href="https://baike.baidu.com/item/%E7%B1%B3%E5%85%B0/21047" title="百度百科-米兰大教堂">[2]</a> 下图是斯福尔扎城堡。<a href="https://baike.baidu.com/item/%E6%96%AF%E7%A6%8F%E5%B0%94%E6%89%8E%E5%9F%8E%E5%A0%A1" title="斯福尔扎城堡">[3]</a> <img src="http://img.ifish.ink/img/milano_chengbao.jpg" alt="城堡"> <img src="http://img.ifish.ink/img/milano.jpg" alt="米兰">
由于米兰距离Lugano比较近，交通便利且便宜，所以去的次数就多一点。</p>
<hr>
<h3 id="代尔夫特鹿特丹">代尔夫特、鹿特丹</h3>
<p><img src="http://img.ifish.ink/img/nl6.jpg">
鹿特丹（Rotterdam）是荷兰第二大城市，包括郊区人口共102万。位于荷兰的南荷兰省，Nieuwe
Maas河畔。 鹿特丹的名字来自于在市中心注入Nieuwe
Maas河的小河鹿特河和荷兰词Dam（坝）。鹿特丹长期为欧洲最大的海港，以集装箱运量计算，19世纪80年代曾是世界上第一大港口，在2010年为世界第10。<a href="https://baike.baidu.com/item/%E9%B9%BF%E7%89%B9%E4%B8%B9" title="鹿特丹">[4]</a> <img src="http://img.ifish.ink/img/nl.jpg">
代尔夫特
（荷兰语：Delft）是荷兰南荷兰省的一个城市，地处海牙和鹿特丹之间。面积
24.08Km2，人口94577（至2006年6月1日)。由于拥有荷兰高等学府代尔夫特理工大学(Delft
University of Technology)和国际水利环境工程学院IHE(International
Institute for Infrastructural ,Hydraulic and Environmental
Engineering)，代尔夫特也被称为知识之城。除代尔夫特外，
该城市亦被翻译做"黛芙朵"或"台夫特"。<a href="https://baike.baidu.com/item/%E4%BB%A3%E5%B0%94%E5%A4%AB%E7%89%B9" title="代尔夫特">[5]</a> 代尔夫特拥有非常出名的“代尔夫特蓝瓷” <img src="http://img.ifish.ink/img/lanci.jpg">
从阿姆斯特丹机场到鹿特丹乘坐火车大约40分钟即可到达代尔夫特，由于时间关系没能在阿姆斯特丹参观，不过参观了鹿特丹以及代尔夫特的一些地方，也算是非常不错的体验了。欧洲随处可见的教堂，教堂一般都算是当地比较壮观的建筑了。
代尔夫特像是一个缩小版的阿姆斯特丹，内城中遍布着水道和小桥，却比阿姆斯特丹更加宁静、复古，这里的桥采用了一种动态的设计方式以便于船只和车辆相融通行。另外南荷兰给我的印象是很多骑自行车的人。<br>
<img src="http://img.ifish.ink/img/dtu.jpg"></p>
<hr>
<h3 id="罗马">罗马</h3>
<p><img src="http://img.ifish.ink/img/roma1.jpg"> <img src="http://img.ifish.ink/img/roma2.jpg"> <img src="http://img.ifish.ink/img/roma3.jpg"></p>
<hr>
<h3 id="苏黎世">苏黎世</h3>
<p><img src="http://img.ifish.ink/img/Zurich1.jpg"> <img src="http://img.ifish.ink/img/Zurich2.jpg"> <img src="http://img.ifish.ink/img/Zurich3.jpg"> <img src="http://img.ifish.ink/img/Zurich4.jpg"></p>
<hr>
<h3 id="总结">总结</h3>
<p>在这里我能感受到更加多的开放和包容，这里的师生来自全球各个地区，各种文化与习惯的交融让这里多了一份尊重和包容。
这趟欧洲之行给我最大的收获是变得更加独立。在一个完全陌生的环境生活几个月，让我遇事多了一些从容淡定，的确成长了许多。
最后，感谢Kai
Hormann教授的邀请和邓重阳教授的支持让我有了这次国外学习的机会，感谢杭州电子科技大学为我提供出国经费方面的资助，此次荷兰之行，要特别感谢我的中学同学-代尔夫特理工大学张羽博士的邀请。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>随笔</tag>
        <tag>游记</tag>
        <tag>生活</tag>
      </tags>
  </entry>
</search>
